Create Library
1-create wcf service library and clenup
2-create .cs file and define the application logic including class[datacontract], Interface[servicecontract] and implementation
3-empty-up app.config

Create IIS host application
1-create web application and cleanup and just keep config file
2-create service.svc 
3-configure endpoints in app.config like

  <system.serviceModel>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <services>
      <service name="wcfLibrary.service" behaviorConfiguration="serviceBehavior">
        <endpoint address ="Addr" binding="basicHttpBinding" contract="wcfLibrary.IService"></endpoint>
        <endpoint address ="secureAddr" binding="wsHttpBinding" contract="wcfLibrary.IService"></endpoint>
        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
    </services>
   
    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>

4-add reference to service library
5-run on browser and copy the wsdl address


client configuration
1-create console application
2-add web reference and add the wsdl/mex path and use auto-created config from file

--------------------------------------------------------------------------------------
config on wcf library if using wcf client with out host 
--------------------------------------------------------------------------------------
  <system.serviceModel>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <services>
      
      <service name="wcfLibrary.service" behaviorConfiguration="serviceBehavior">
        
        <endpoint address ="http://localhost:4000/helloservice/" binding="basicHttpBinding" contract="wcfLibrary.IService"></endpoint>

		<!--MUST BE defined for wcf library if is the host to make the wcfClient APP run-->
        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="http://localhost:8082/mex" />
        
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://localhost:5623/helloservice/meta" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>
--------------------------------------------------------------------------------------



Note : MEX Endpoints[tcp/http/pipes]  ~ iMetaldataExchange a standard service contract to discover endpoints
Note : possible to download service definition using 

		svcutil.exe  >>> gives Contract and Endpoints definitions   "use  disco.exe xxx.svc instead of just using svcutil"
		(1)"wsdl" [usually by svc files] 
		(2)"Meta" service metadata and if svcutil all of them, result is the same
		(3) mex(tcp/http/pipe) end points which needs (2)
		
		//cross-platform Usage  [no need to add reference] or addWebReference for .NET
		then client project can get the copy of those 2 files and add reference to sys.servicemodel and sys.runtime.serialization 
		and then write the client code (chaneg the config file to app.config)


		iis 5/6 only handles wcf http solution iss7/WAS >> winfeatures > 
				1-WAS
				2-.net 3.5 > WCF non-http
				Not working >>>
				3-goto c:\windows\system32\inetsrv\config\
				4-at bindings http >  *:port:  -  net.tcp > 808:* - net.pipe > * - net.msmq > localhost 
				5-add permission entry enabledProtocols:"http,net.pipe,net.tcp,net.msmq  in c:\windows\system32\inetsrv\config\applicationHost.config