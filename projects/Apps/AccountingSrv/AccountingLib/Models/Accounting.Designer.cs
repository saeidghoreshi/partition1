//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Models", "FK_account_categoryType", "categoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.categoryType), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.account), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_account_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currency), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.account), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_account_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.account), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_transaction_account", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.account), "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.transaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_address_city", "city", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.city), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.address), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_address_country", "country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.country), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.address), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_address_street", "street", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.street), "address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.address), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_bankCard_bank", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.bank), "bankCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.bankCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_ccFee_bank", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.bank), "ccFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.ccFee), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_fee_bank", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.bank), "fee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.fee), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_bankCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.card), "bankCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.bankCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_card_cardType", "cardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.cardType), "card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.card), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_ccCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.card), "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.ccCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_dbCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.card), "dbCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.dbCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.card), "entityCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_externalPayment_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.card), "externalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.externalPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_dbCard_cardType", "cardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.cardType), "dbCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.dbCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_fee_cardType", "cardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.cardType), "fee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.fee), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_categoryType_glType", "glType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.glType), "categoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.categoryType), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_ccCard_cardType", "ccCardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.ccCardType), "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.ccCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_mcCard_ccCard", "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.ccCard), "mcCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.mcCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_visaCard_ccCard", "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.ccCard), "visaCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.visaCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_ccFee_ccCardType", "ccCardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.ccCardType), "ccFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.ccFee), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_ccPayment_externalPayment", "externalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.externalPayment), "ccPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.ccPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_currency_currencyType", "currencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currencyType), "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.currency), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityWallet_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currency), "entityWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityWallet), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoice_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currency), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceService_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currency), "invoiceService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceService), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_payment_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.currency), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.payment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_dbPayment_externalPayment", "externalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.externalPayment), "dbPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.dbPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entity_entityType", "entityType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entityType), "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entity), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityCard_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "entityCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityCard), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityWallet_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "entityWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityWallet), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoice_issuer", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoice_receiver", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_organization_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.organization), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_payment_entitypayee", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.payment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_payment_entitypayer", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.payment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_person_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.person), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_service_entitygiver", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.service), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_service_entityreceiver", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entity), "service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.service), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityWalletTransaction_entityWallet", "entityWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.entityWallet), "entityWalletTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityWalletTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_entityWalletTransaction_transaction", "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.transaction), "entityWalletTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.entityWalletTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_externalPayment_extPaymentType", "extPaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.extPaymentType), "externalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.externalPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_externalPayment_payment", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.payment), "externalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.externalPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_internalPayment_payment", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.payment), "internalPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.internalPayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceAction_invoice", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.invoice), "invoiceAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceAction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoicePayment_invoice", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.invoice), "invoicePayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoicePayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceService_invoice", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.invoice), "invoiceService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceService), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceAction_invoiceStat", "invoiceStat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.invoiceStat), "invoiceAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceAction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceActionTransaction_invoiceAction", "invoiceAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.invoiceAction), "invoiceActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceActionTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceActionTransaction_transaction", "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.transaction), "invoiceActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceActionTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoicePayment_payment", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.payment), "invoicePayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoicePayment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_invoiceService_service", "service", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.service), "invoiceService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.invoiceService), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_office_officeType", "officeType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.officeType), "office", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.office), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_orgOffice_office", "office", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.office), "orgOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.orgOffice), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_orgOffice_organization", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.organization), "orgOffice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.orgOffice), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_payment_paymentType", "paymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.paymentType), "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.payment), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_paymentAction_payment", "payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.payment), "paymentAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.paymentAction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_paymentAction_paymentStat", "paymentStat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.paymentStat), "paymentAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.paymentAction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_paymentActionTransaction_paymentAction", "paymentAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.paymentAction), "paymentActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.paymentActionTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_paymentActionTransaction_transaction", "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.transaction), "paymentActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.paymentActionTransaction), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_user_person", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.person), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.user), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_user_userType", "userType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.userType), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.user), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_permission_lu_role", "lu_role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_role), "permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.permission), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_rca_lu_role", "lu_role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_role), "rca", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.rca), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_person_org_organization", "organization1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.organization1), "person_org", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.person_org), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_permission_user", "user1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.user1), "permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.permission), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_person_org_person", "person1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.person1), "person_org", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.person_org), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_task_user_user", "person1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.person1), "task_person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.task_person), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_user_person1", "person1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.person1), "user1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.user1), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_testreview_test", "test", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.test), "testreview", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.testreview), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_topic_foldering", "foldering", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.foldering), "topics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.topics), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_document_object_document_object", "document", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.document), "document_object", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.document_object), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_rca_lu_acl", "lu_acl", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_acl), "rca", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.rca), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_rca_lu_component", "lu_component", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_component), "rca", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.rca), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_task_lu_task_status", "lu_task_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_task_status), "task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.task), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_task_person_lu_task_status", "lu_task_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.lu_task_status), "task_person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.task_person), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_prca_rca", "rca", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.rca), "prca", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.prca), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_task_user_task", "task", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.task), "task_person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.task_person), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_task_user_progress_task_user", "task_person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.task_person), "tp_progress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.tp_progress), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_tp_timers_task_person", "task_person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.task_person), "tp_timer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.tp_timer), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_resourceCategory_category", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.category), "resourceCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.resourceCategory), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_resource_resource", "resource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.resource), "resource1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.resource), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_resourceCategory_resource", "resource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.resource), "resourceCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.resourceCategory), true)]
[assembly: EdmRelationshipAttribute("Models", "FK_resourceHighlight_resource", "resource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AccountingLib.Models.resource), "resourceHighlight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccountingLib.Models.resourceHighlight), true)]

#endregion

namespace AccountingLib.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AccContexts : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AccContexts object using the connection string found in the 'AccContexts' section of the application configuration file.
        /// </summary>
        public AccContexts() : base("name=AccContexts", "AccContexts")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AccContexts object.
        /// </summary>
        public AccContexts(string connectionString) : base(connectionString, "AccContexts")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AccContexts object.
        /// </summary>
        public AccContexts(EntityConnection connection) : base(connection, "AccContexts")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> account
        {
            get
            {
                if ((_account == null))
                {
                    _account = base.CreateObjectSet<account>("account");
                }
                return _account;
            }
        }
        private ObjectSet<account> _account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<address> address
        {
            get
            {
                if ((_address == null))
                {
                    _address = base.CreateObjectSet<address>("address");
                }
                return _address;
            }
        }
        private ObjectSet<address> _address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bank> bank
        {
            get
            {
                if ((_bank == null))
                {
                    _bank = base.CreateObjectSet<bank>("bank");
                }
                return _bank;
            }
        }
        private ObjectSet<bank> _bank;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bankCard> bankCard
        {
            get
            {
                if ((_bankCard == null))
                {
                    _bankCard = base.CreateObjectSet<bankCard>("bankCard");
                }
                return _bankCard;
            }
        }
        private ObjectSet<bankCard> _bankCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<card> card
        {
            get
            {
                if ((_card == null))
                {
                    _card = base.CreateObjectSet<card>("card");
                }
                return _card;
            }
        }
        private ObjectSet<card> _card;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cardType> cardType
        {
            get
            {
                if ((_cardType == null))
                {
                    _cardType = base.CreateObjectSet<cardType>("cardType");
                }
                return _cardType;
            }
        }
        private ObjectSet<cardType> _cardType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<categoryType> categoryType
        {
            get
            {
                if ((_categoryType == null))
                {
                    _categoryType = base.CreateObjectSet<categoryType>("categoryType");
                }
                return _categoryType;
            }
        }
        private ObjectSet<categoryType> _categoryType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ccCard> ccCard
        {
            get
            {
                if ((_ccCard == null))
                {
                    _ccCard = base.CreateObjectSet<ccCard>("ccCard");
                }
                return _ccCard;
            }
        }
        private ObjectSet<ccCard> _ccCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ccCardType> ccCardType
        {
            get
            {
                if ((_ccCardType == null))
                {
                    _ccCardType = base.CreateObjectSet<ccCardType>("ccCardType");
                }
                return _ccCardType;
            }
        }
        private ObjectSet<ccCardType> _ccCardType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ccFee> ccFee
        {
            get
            {
                if ((_ccFee == null))
                {
                    _ccFee = base.CreateObjectSet<ccFee>("ccFee");
                }
                return _ccFee;
            }
        }
        private ObjectSet<ccFee> _ccFee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ccPayment> ccPayment
        {
            get
            {
                if ((_ccPayment == null))
                {
                    _ccPayment = base.CreateObjectSet<ccPayment>("ccPayment");
                }
                return _ccPayment;
            }
        }
        private ObjectSet<ccPayment> _ccPayment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<city> city
        {
            get
            {
                if ((_city == null))
                {
                    _city = base.CreateObjectSet<city>("city");
                }
                return _city;
            }
        }
        private ObjectSet<city> _city;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country> country
        {
            get
            {
                if ((_country == null))
                {
                    _country = base.CreateObjectSet<country>("country");
                }
                return _country;
            }
        }
        private ObjectSet<country> _country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currency> currency
        {
            get
            {
                if ((_currency == null))
                {
                    _currency = base.CreateObjectSet<currency>("currency");
                }
                return _currency;
            }
        }
        private ObjectSet<currency> _currency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currencyType> currencyType
        {
            get
            {
                if ((_currencyType == null))
                {
                    _currencyType = base.CreateObjectSet<currencyType>("currencyType");
                }
                return _currencyType;
            }
        }
        private ObjectSet<currencyType> _currencyType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dbCard> dbCard
        {
            get
            {
                if ((_dbCard == null))
                {
                    _dbCard = base.CreateObjectSet<dbCard>("dbCard");
                }
                return _dbCard;
            }
        }
        private ObjectSet<dbCard> _dbCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dbPayment> dbPayment
        {
            get
            {
                if ((_dbPayment == null))
                {
                    _dbPayment = base.CreateObjectSet<dbPayment>("dbPayment");
                }
                return _dbPayment;
            }
        }
        private ObjectSet<dbPayment> _dbPayment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entity> entity
        {
            get
            {
                if ((_entity == null))
                {
                    _entity = base.CreateObjectSet<entity>("entity");
                }
                return _entity;
            }
        }
        private ObjectSet<entity> _entity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entityCard> entityCard
        {
            get
            {
                if ((_entityCard == null))
                {
                    _entityCard = base.CreateObjectSet<entityCard>("entityCard");
                }
                return _entityCard;
            }
        }
        private ObjectSet<entityCard> _entityCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entityType> entityType
        {
            get
            {
                if ((_entityType == null))
                {
                    _entityType = base.CreateObjectSet<entityType>("entityType");
                }
                return _entityType;
            }
        }
        private ObjectSet<entityType> _entityType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entityWallet> entityWallet
        {
            get
            {
                if ((_entityWallet == null))
                {
                    _entityWallet = base.CreateObjectSet<entityWallet>("entityWallet");
                }
                return _entityWallet;
            }
        }
        private ObjectSet<entityWallet> _entityWallet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entityWalletTransaction> entityWalletTransaction
        {
            get
            {
                if ((_entityWalletTransaction == null))
                {
                    _entityWalletTransaction = base.CreateObjectSet<entityWalletTransaction>("entityWalletTransaction");
                }
                return _entityWalletTransaction;
            }
        }
        private ObjectSet<entityWalletTransaction> _entityWalletTransaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<externalPayment> externalPayment
        {
            get
            {
                if ((_externalPayment == null))
                {
                    _externalPayment = base.CreateObjectSet<externalPayment>("externalPayment");
                }
                return _externalPayment;
            }
        }
        private ObjectSet<externalPayment> _externalPayment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<extPaymentType> extPaymentType
        {
            get
            {
                if ((_extPaymentType == null))
                {
                    _extPaymentType = base.CreateObjectSet<extPaymentType>("extPaymentType");
                }
                return _extPaymentType;
            }
        }
        private ObjectSet<extPaymentType> _extPaymentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fee> fee
        {
            get
            {
                if ((_fee == null))
                {
                    _fee = base.CreateObjectSet<fee>("fee");
                }
                return _fee;
            }
        }
        private ObjectSet<fee> _fee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<glType> glType
        {
            get
            {
                if ((_glType == null))
                {
                    _glType = base.CreateObjectSet<glType>("glType");
                }
                return _glType;
            }
        }
        private ObjectSet<glType> _glType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<internalPayment> internalPayment
        {
            get
            {
                if ((_internalPayment == null))
                {
                    _internalPayment = base.CreateObjectSet<internalPayment>("internalPayment");
                }
                return _internalPayment;
            }
        }
        private ObjectSet<internalPayment> _internalPayment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoice> invoice
        {
            get
            {
                if ((_invoice == null))
                {
                    _invoice = base.CreateObjectSet<invoice>("invoice");
                }
                return _invoice;
            }
        }
        private ObjectSet<invoice> _invoice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceAction> invoiceAction
        {
            get
            {
                if ((_invoiceAction == null))
                {
                    _invoiceAction = base.CreateObjectSet<invoiceAction>("invoiceAction");
                }
                return _invoiceAction;
            }
        }
        private ObjectSet<invoiceAction> _invoiceAction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceActionTransaction> invoiceActionTransaction
        {
            get
            {
                if ((_invoiceActionTransaction == null))
                {
                    _invoiceActionTransaction = base.CreateObjectSet<invoiceActionTransaction>("invoiceActionTransaction");
                }
                return _invoiceActionTransaction;
            }
        }
        private ObjectSet<invoiceActionTransaction> _invoiceActionTransaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoicePayment> invoicePayment
        {
            get
            {
                if ((_invoicePayment == null))
                {
                    _invoicePayment = base.CreateObjectSet<invoicePayment>("invoicePayment");
                }
                return _invoicePayment;
            }
        }
        private ObjectSet<invoicePayment> _invoicePayment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceService> invoiceService
        {
            get
            {
                if ((_invoiceService == null))
                {
                    _invoiceService = base.CreateObjectSet<invoiceService>("invoiceService");
                }
                return _invoiceService;
            }
        }
        private ObjectSet<invoiceService> _invoiceService;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceStat> invoiceStat
        {
            get
            {
                if ((_invoiceStat == null))
                {
                    _invoiceStat = base.CreateObjectSet<invoiceStat>("invoiceStat");
                }
                return _invoiceStat;
            }
        }
        private ObjectSet<invoiceStat> _invoiceStat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mcCard> mcCard
        {
            get
            {
                if ((_mcCard == null))
                {
                    _mcCard = base.CreateObjectSet<mcCard>("mcCard");
                }
                return _mcCard;
            }
        }
        private ObjectSet<mcCard> _mcCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<office> office
        {
            get
            {
                if ((_office == null))
                {
                    _office = base.CreateObjectSet<office>("office");
                }
                return _office;
            }
        }
        private ObjectSet<office> _office;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<officeType> officeType
        {
            get
            {
                if ((_officeType == null))
                {
                    _officeType = base.CreateObjectSet<officeType>("officeType");
                }
                return _officeType;
            }
        }
        private ObjectSet<officeType> _officeType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organization> organization
        {
            get
            {
                if ((_organization == null))
                {
                    _organization = base.CreateObjectSet<organization>("organization");
                }
                return _organization;
            }
        }
        private ObjectSet<organization> _organization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<orgOffice> orgOffice
        {
            get
            {
                if ((_orgOffice == null))
                {
                    _orgOffice = base.CreateObjectSet<orgOffice>("orgOffice");
                }
                return _orgOffice;
            }
        }
        private ObjectSet<orgOffice> _orgOffice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<payment> payment
        {
            get
            {
                if ((_payment == null))
                {
                    _payment = base.CreateObjectSet<payment>("payment");
                }
                return _payment;
            }
        }
        private ObjectSet<payment> _payment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<paymentAction> paymentAction
        {
            get
            {
                if ((_paymentAction == null))
                {
                    _paymentAction = base.CreateObjectSet<paymentAction>("paymentAction");
                }
                return _paymentAction;
            }
        }
        private ObjectSet<paymentAction> _paymentAction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<paymentActionTransaction> paymentActionTransaction
        {
            get
            {
                if ((_paymentActionTransaction == null))
                {
                    _paymentActionTransaction = base.CreateObjectSet<paymentActionTransaction>("paymentActionTransaction");
                }
                return _paymentActionTransaction;
            }
        }
        private ObjectSet<paymentActionTransaction> _paymentActionTransaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<paymentStat> paymentStat
        {
            get
            {
                if ((_paymentStat == null))
                {
                    _paymentStat = base.CreateObjectSet<paymentStat>("paymentStat");
                }
                return _paymentStat;
            }
        }
        private ObjectSet<paymentStat> _paymentStat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<paymentType> paymentType
        {
            get
            {
                if ((_paymentType == null))
                {
                    _paymentType = base.CreateObjectSet<paymentType>("paymentType");
                }
                return _paymentType;
            }
        }
        private ObjectSet<paymentType> _paymentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person> person
        {
            get
            {
                if ((_person == null))
                {
                    _person = base.CreateObjectSet<person>("person");
                }
                return _person;
            }
        }
        private ObjectSet<person> _person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<service> service
        {
            get
            {
                if ((_service == null))
                {
                    _service = base.CreateObjectSet<service>("service");
                }
                return _service;
            }
        }
        private ObjectSet<service> _service;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<street> street
        {
            get
            {
                if ((_street == null))
                {
                    _street = base.CreateObjectSet<street>("street");
                }
                return _street;
            }
        }
        private ObjectSet<street> _street;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysUserType> sysUserType
        {
            get
            {
                if ((_sysUserType == null))
                {
                    _sysUserType = base.CreateObjectSet<sysUserType>("sysUserType");
                }
                return _sysUserType;
            }
        }
        private ObjectSet<sysUserType> _sysUserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transaction> transaction
        {
            get
            {
                if ((_transaction == null))
                {
                    _transaction = base.CreateObjectSet<transaction>("transaction");
                }
                return _transaction;
            }
        }
        private ObjectSet<transaction> _transaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> user
        {
            get
            {
                if ((_user == null))
                {
                    _user = base.CreateObjectSet<user>("user");
                }
                return _user;
            }
        }
        private ObjectSet<user> _user;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<userType> userType
        {
            get
            {
                if ((_userType == null))
                {
                    _userType = base.CreateObjectSet<userType>("userType");
                }
                return _userType;
            }
        }
        private ObjectSet<userType> _userType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<visaCard> visaCard
        {
            get
            {
                if ((_visaCard == null))
                {
                    _visaCard = base.CreateObjectSet<visaCard>("visaCard");
                }
                return _visaCard;
            }
        }
        private ObjectSet<visaCard> _visaCard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<app_features> app_features
        {
            get
            {
                if ((_app_features == null))
                {
                    _app_features = base.CreateObjectSet<app_features>("app_features");
                }
                return _app_features;
            }
        }
        private ObjectSet<app_features> _app_features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_role> lu_role
        {
            get
            {
                if ((_lu_role == null))
                {
                    _lu_role = base.CreateObjectSet<lu_role>("lu_role");
                }
                return _lu_role;
            }
        }
        private ObjectSet<lu_role> _lu_role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<module_features> module_features
        {
            get
            {
                if ((_module_features == null))
                {
                    _module_features = base.CreateObjectSet<module_features>("module_features");
                }
                return _module_features;
            }
        }
        private ObjectSet<module_features> _module_features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organization1> organization1
        {
            get
            {
                if ((_organization1 == null))
                {
                    _organization1 = base.CreateObjectSet<organization1>("organization1");
                }
                return _organization1;
            }
        }
        private ObjectSet<organization1> _organization1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<permission> permission
        {
            get
            {
                if ((_permission == null))
                {
                    _permission = base.CreateObjectSet<permission>("permission");
                }
                return _permission;
            }
        }
        private ObjectSet<permission> _permission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person1> person1
        {
            get
            {
                if ((_person1 == null))
                {
                    _person1 = base.CreateObjectSet<person1>("person1");
                }
                return _person1;
            }
        }
        private ObjectSet<person1> _person1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person_org> person_org
        {
            get
            {
                if ((_person_org == null))
                {
                    _person_org = base.CreateObjectSet<person_org>("person_org");
                }
                return _person_org;
            }
        }
        private ObjectSet<person_org> _person_org;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<test> test
        {
            get
            {
                if ((_test == null))
                {
                    _test = base.CreateObjectSet<test>("test");
                }
                return _test;
            }
        }
        private ObjectSet<test> _test;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<testreview> testreview
        {
            get
            {
                if ((_testreview == null))
                {
                    _testreview = base.CreateObjectSet<testreview>("testreview");
                }
                return _testreview;
            }
        }
        private ObjectSet<testreview> _testreview;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user1> user1
        {
            get
            {
                if ((_user1 == null))
                {
                    _user1 = base.CreateObjectSet<user1>("user1");
                }
                return _user1;
            }
        }
        private ObjectSet<user1> _user1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<foldering> foldering
        {
            get
            {
                if ((_foldering == null))
                {
                    _foldering = base.CreateObjectSet<foldering>("foldering");
                }
                return _foldering;
            }
        }
        private ObjectSet<foldering> _foldering;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<topic> topic
        {
            get
            {
                if ((_topic == null))
                {
                    _topic = base.CreateObjectSet<topic>("topic");
                }
                return _topic;
            }
        }
        private ObjectSet<topic> _topic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<topics> topics
        {
            get
            {
                if ((_topics == null))
                {
                    _topics = base.CreateObjectSet<topics>("topics");
                }
                return _topics;
            }
        }
        private ObjectSet<topics> _topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<document> document
        {
            get
            {
                if ((_document == null))
                {
                    _document = base.CreateObjectSet<document>("document");
                }
                return _document;
            }
        }
        private ObjectSet<document> _document;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<document_object> document_object
        {
            get
            {
                if ((_document_object == null))
                {
                    _document_object = base.CreateObjectSet<document_object>("document_object");
                }
                return _document_object;
            }
        }
        private ObjectSet<document_object> _document_object;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_acl> lu_acl
        {
            get
            {
                if ((_lu_acl == null))
                {
                    _lu_acl = base.CreateObjectSet<lu_acl>("lu_acl");
                }
                return _lu_acl;
            }
        }
        private ObjectSet<lu_acl> _lu_acl;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_component> lu_component
        {
            get
            {
                if ((_lu_component == null))
                {
                    _lu_component = base.CreateObjectSet<lu_component>("lu_component");
                }
                return _lu_component;
            }
        }
        private ObjectSet<lu_component> _lu_component;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_task_status> lu_task_status
        {
            get
            {
                if ((_lu_task_status == null))
                {
                    _lu_task_status = base.CreateObjectSet<lu_task_status>("lu_task_status");
                }
                return _lu_task_status;
            }
        }
        private ObjectSet<lu_task_status> _lu_task_status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<prca> prca
        {
            get
            {
                if ((_prca == null))
                {
                    _prca = base.CreateObjectSet<prca>("prca");
                }
                return _prca;
            }
        }
        private ObjectSet<prca> _prca;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rca> rca
        {
            get
            {
                if ((_rca == null))
                {
                    _rca = base.CreateObjectSet<rca>("rca");
                }
                return _rca;
            }
        }
        private ObjectSet<rca> _rca;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<task> task
        {
            get
            {
                if ((_task == null))
                {
                    _task = base.CreateObjectSet<task>("task");
                }
                return _task;
            }
        }
        private ObjectSet<task> _task;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<task_person> task_person
        {
            get
            {
                if ((_task_person == null))
                {
                    _task_person = base.CreateObjectSet<task_person>("task_person");
                }
                return _task_person;
            }
        }
        private ObjectSet<task_person> _task_person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tp_progress> tp_progress
        {
            get
            {
                if ((_tp_progress == null))
                {
                    _tp_progress = base.CreateObjectSet<tp_progress>("tp_progress");
                }
                return _tp_progress;
            }
        }
        private ObjectSet<tp_progress> _tp_progress;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tp_timer> tp_timer
        {
            get
            {
                if ((_tp_timer == null))
                {
                    _tp_timer = base.CreateObjectSet<tp_timer>("tp_timer");
                }
                return _tp_timer;
            }
        }
        private ObjectSet<tp_timer> _tp_timer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> category
        {
            get
            {
                if ((_category == null))
                {
                    _category = base.CreateObjectSet<category>("category");
                }
                return _category;
            }
        }
        private ObjectSet<category> _category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<login> login
        {
            get
            {
                if ((_login == null))
                {
                    _login = base.CreateObjectSet<login>("login");
                }
                return _login;
            }
        }
        private ObjectSet<login> _login;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<resource> resource
        {
            get
            {
                if ((_resource == null))
                {
                    _resource = base.CreateObjectSet<resource>("resource");
                }
                return _resource;
            }
        }
        private ObjectSet<resource> _resource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<resourceCategory> resourceCategory
        {
            get
            {
                if ((_resourceCategory == null))
                {
                    _resourceCategory = base.CreateObjectSet<resourceCategory>("resourceCategory");
                }
                return _resourceCategory;
            }
        }
        private ObjectSet<resourceCategory> _resourceCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<resourceHighlight> resourceHighlight
        {
            get
            {
                if ((_resourceHighlight == null))
                {
                    _resourceHighlight = base.CreateObjectSet<resourceHighlight>("resourceHighlight");
                }
                return _resourceHighlight;
            }
        }
        private ObjectSet<resourceHighlight> _resourceHighlight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transactionAccount> transactionAccount
        {
            get
            {
                if ((_transactionAccount == null))
                {
                    _transactionAccount = base.CreateObjectSet<transactionAccount>("transactionAccount");
                }
                return _transactionAccount;
            }
        }
        private ObjectSet<transactionAccount> _transactionAccount;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccount(account account)
        {
            base.AddObject("account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaddress(address address)
        {
            base.AddObject("address", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bank EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobank(bank bank)
        {
            base.AddObject("bank", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bankCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobankCard(bankCard bankCard)
        {
            base.AddObject("bankCard", bankCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the card EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocard(card card)
        {
            base.AddObject("card", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cardType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocardType(cardType cardType)
        {
            base.AddObject("cardType", cardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the categoryType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategoryType(categoryType categoryType)
        {
            base.AddObject("categoryType", categoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ccCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToccCard(ccCard ccCard)
        {
            base.AddObject("ccCard", ccCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ccCardType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToccCardType(ccCardType ccCardType)
        {
            base.AddObject("ccCardType", ccCardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ccFee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToccFee(ccFee ccFee)
        {
            base.AddObject("ccFee", ccFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ccPayment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToccPayment(ccPayment ccPayment)
        {
            base.AddObject("ccPayment", ccPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the city EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocity(city city)
        {
            base.AddObject("city", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountry(country country)
        {
            base.AddObject("country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrency(currency currency)
        {
            base.AddObject("currency", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currencyType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrencyType(currencyType currencyType)
        {
            base.AddObject("currencyType", currencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dbCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodbCard(dbCard dbCard)
        {
            base.AddObject("dbCard", dbCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dbPayment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodbPayment(dbPayment dbPayment)
        {
            base.AddObject("dbPayment", dbPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentity(entity entity)
        {
            base.AddObject("entity", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entityCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentityCard(entityCard entityCard)
        {
            base.AddObject("entityCard", entityCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entityType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentityType(entityType entityType)
        {
            base.AddObject("entityType", entityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entityWallet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentityWallet(entityWallet entityWallet)
        {
            base.AddObject("entityWallet", entityWallet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entityWalletTransaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentityWalletTransaction(entityWalletTransaction entityWalletTransaction)
        {
            base.AddObject("entityWalletTransaction", entityWalletTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the externalPayment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexternalPayment(externalPayment externalPayment)
        {
            base.AddObject("externalPayment", externalPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the extPaymentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToextPaymentType(extPaymentType extPaymentType)
        {
            base.AddObject("extPaymentType", extPaymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofee(fee fee)
        {
            base.AddObject("fee", fee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the glType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToglType(glType glType)
        {
            base.AddObject("glType", glType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the internalPayment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTointernalPayment(internalPayment internalPayment)
        {
            base.AddObject("internalPayment", internalPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoice(invoice invoice)
        {
            base.AddObject("invoice", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceAction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceAction(invoiceAction invoiceAction)
        {
            base.AddObject("invoiceAction", invoiceAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceActionTransaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceActionTransaction(invoiceActionTransaction invoiceActionTransaction)
        {
            base.AddObject("invoiceActionTransaction", invoiceActionTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoicePayment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoicePayment(invoicePayment invoicePayment)
        {
            base.AddObject("invoicePayment", invoicePayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceService EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceService(invoiceService invoiceService)
        {
            base.AddObject("invoiceService", invoiceService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceStat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceStat(invoiceStat invoiceStat)
        {
            base.AddObject("invoiceStat", invoiceStat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mcCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomcCard(mcCard mcCard)
        {
            base.AddObject("mcCard", mcCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the office EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTooffice(office office)
        {
            base.AddObject("office", office);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the officeType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToofficeType(officeType officeType)
        {
            base.AddObject("officeType", officeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the organization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorganization(organization organization)
        {
            base.AddObject("organization", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orgOffice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorgOffice(orgOffice orgOffice)
        {
            base.AddObject("orgOffice", orgOffice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the payment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopayment(payment payment)
        {
            base.AddObject("payment", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the paymentAction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopaymentAction(paymentAction paymentAction)
        {
            base.AddObject("paymentAction", paymentAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the paymentActionTransaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopaymentActionTransaction(paymentActionTransaction paymentActionTransaction)
        {
            base.AddObject("paymentActionTransaction", paymentActionTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the paymentStat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopaymentStat(paymentStat paymentStat)
        {
            base.AddObject("paymentStat", paymentStat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the paymentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopaymentType(paymentType paymentType)
        {
            base.AddObject("paymentType", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToperson(person person)
        {
            base.AddObject("person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the service EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToservice(service service)
        {
            base.AddObject("service", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the street EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostreet(street street)
        {
            base.AddObject("street", street);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysUserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysUserType(sysUserType sysUserType)
        {
            base.AddObject("sysUserType", sysUserType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransaction(transaction transaction)
        {
            base.AddObject("transaction", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser(user user)
        {
            base.AddObject("user", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the userType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouserType(userType userType)
        {
            base.AddObject("userType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the visaCard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovisaCard(visaCard visaCard)
        {
            base.AddObject("visaCard", visaCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the app_features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToapp_features(app_features app_features)
        {
            base.AddObject("app_features", app_features);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_role(lu_role lu_role)
        {
            base.AddObject("lu_role", lu_role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the module_features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomodule_features(module_features module_features)
        {
            base.AddObject("module_features", module_features);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the organization1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorganization1(organization1 organization1)
        {
            base.AddObject("organization1", organization1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the permission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopermission(permission permission)
        {
            base.AddObject("permission", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the person1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToperson1(person1 person1)
        {
            base.AddObject("person1", person1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the person_org EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToperson_org(person_org person_org)
        {
            base.AddObject("person_org", person_org);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the test EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotest(test test)
        {
            base.AddObject("test", test);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the testreview EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotestreview(testreview testreview)
        {
            base.AddObject("testreview", testreview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser1(user1 user1)
        {
            base.AddObject("user1", user1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the foldering EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofoldering(foldering foldering)
        {
            base.AddObject("foldering", foldering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the topic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotopic(topic topic)
        {
            base.AddObject("topic", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotopics(topics topics)
        {
            base.AddObject("topics", topics);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the document EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodocument(document document)
        {
            base.AddObject("document", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the document_object EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodocument_object(document_object document_object)
        {
            base.AddObject("document_object", document_object);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_acl EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_acl(lu_acl lu_acl)
        {
            base.AddObject("lu_acl", lu_acl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_component EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_component(lu_component lu_component)
        {
            base.AddObject("lu_component", lu_component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_task_status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_task_status(lu_task_status lu_task_status)
        {
            base.AddObject("lu_task_status", lu_task_status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the prca EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprca(prca prca)
        {
            base.AddObject("prca", prca);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the rca EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorca(rca rca)
        {
            base.AddObject("rca", rca);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the task EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotask(task task)
        {
            base.AddObject("task", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the task_person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotask_person(task_person task_person)
        {
            base.AddObject("task_person", task_person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tp_progress EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotp_progress(tp_progress tp_progress)
        {
            base.AddObject("tp_progress", tp_progress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tp_timer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotp_timer(tp_timer tp_timer)
        {
            base.AddObject("tp_timer", tp_timer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategory(category category)
        {
            base.AddObject("category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the login EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTologin(login login)
        {
            base.AddObject("login", login);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the resource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToresource(resource resource)
        {
            base.AddObject("resource", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the resourceCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToresourceCategory(resourceCategory resourceCategory)
        {
            base.AddObject("resourceCategory", resourceCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the resourceHighlight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToresourceHighlight(resourceHighlight resourceHighlight)
        {
            base.AddObject("resourceHighlight", resourceHighlight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transactionAccount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransactionAccount(transactionAccount transactionAccount)
        {
            base.AddObject("transactionAccount", transactionAccount);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int resetSeeds()
        {
            return base.ExecuteFunction("resetSeeds");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="balance">Initial value of the balance property.</param>
        public static account Createaccount(global::System.Int32 id, global::System.Decimal balance)
        {
            account account = new account();
            account.ID = id;
            account.balance = balance;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> catTypeID
        {
            get
            {
                return _catTypeID;
            }
            set
            {
                OncatTypeIDChanging(value);
                ReportPropertyChanging("catTypeID");
                _catTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("catTypeID");
                OncatTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _catTypeID;
        partial void OncatTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncatTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ownerEntityID
        {
            get
            {
                return _ownerEntityID;
            }
            set
            {
                OnownerEntityIDChanging(value);
                ReportPropertyChanging("ownerEntityID");
                _ownerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ownerEntityID");
                OnownerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ownerEntityID;
        partial void OnownerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnownerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private global::System.Decimal _balance;
        partial void OnbalanceChanging(global::System.Decimal value);
        partial void OnbalanceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_categoryType", "categoryType")]
        public categoryType categoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<categoryType>("Models.FK_account_categoryType", "categoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<categoryType>("Models.FK_account_categoryType", "categoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<categoryType> categoryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<categoryType>("Models.FK_account_categoryType", "categoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<categoryType>("Models.FK_account_categoryType", "categoryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_account_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_account_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_account_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("Models.FK_account_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_account_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_account_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_account_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_account_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_transaction_account", "transaction")]
        public EntityCollection<transaction> transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("Models.FK_transaction_account", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("Models.FK_transaction_account", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new address object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static address Createaddress(global::System.Int32 id)
        {
            address address = new address();
            address.ID = id;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> countryID
        {
            get
            {
                return _countryID;
            }
            set
            {
                OncountryIDChanging(value);
                ReportPropertyChanging("countryID");
                _countryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("countryID");
                OncountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _countryID;
        partial void OncountryIDChanging(Nullable<global::System.Int32> value);
        partial void OncountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                OncityIDChanging(value);
                ReportPropertyChanging("cityID");
                _cityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityID");
                OncityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cityID;
        partial void OncityIDChanging(Nullable<global::System.Int32> value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> streetID
        {
            get
            {
                return _streetID;
            }
            set
            {
                OnstreetIDChanging(value);
                ReportPropertyChanging("streetID");
                _streetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("streetID");
                OnstreetIDChanged();
            }
        }
        private Nullable<global::System.Int32> _streetID;
        partial void OnstreetIDChanging(Nullable<global::System.Int32> value);
        partial void OnstreetIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_city", "city")]
        public city city
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("Models.FK_address_city", "city").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("Models.FK_address_city", "city").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<city> cityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<city>("Models.FK_address_city", "city");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<city>("Models.FK_address_city", "city", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_country", "country")]
        public country country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("Models.FK_address_country", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("Models.FK_address_country", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<country> countryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<country>("Models.FK_address_country", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<country>("Models.FK_address_country", "country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_street", "street")]
        public street street
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<street>("Models.FK_address_street", "street").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<street>("Models.FK_address_street", "street").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<street> streetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<street>("Models.FK_address_street", "street");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<street>("Models.FK_address_street", "street", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="app_features")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class app_features : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new app_features object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static app_features Createapp_features(global::System.Int32 id)
        {
            app_features app_features = new app_features();
            app_features.id = id;
            return app_features;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_id;
        partial void Onparent_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bank object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static bank Createbank(global::System.Int32 id)
        {
            bank bank = new bank();
            bank.ID = id;
            return bank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_bankCard_bank", "bankCard")]
        public EntityCollection<bankCard> bankCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<bankCard>("Models.FK_bankCard_bank", "bankCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<bankCard>("Models.FK_bankCard_bank", "bankCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccFee_bank", "ccFee")]
        public EntityCollection<ccFee> ccFee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccFee>("Models.FK_ccFee_bank", "ccFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccFee>("Models.FK_ccFee_bank", "ccFee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_fee_bank", "fee")]
        public EntityCollection<fee> fee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fee>("Models.FK_fee_bank", "fee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fee>("Models.FK_fee_bank", "fee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="bankCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bankCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bankCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static bankCard CreatebankCard(global::System.Int32 id)
        {
            bankCard bankCard = new bankCard();
            bankCard.ID = id;
            return bankCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bankID
        {
            get
            {
                return _bankID;
            }
            set
            {
                OnbankIDChanging(value);
                ReportPropertyChanging("bankID");
                _bankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bankID");
                OnbankIDChanged();
            }
        }
        private Nullable<global::System.Int32> _bankID;
        partial void OnbankIDChanging(Nullable<global::System.Int32> value);
        partial void OnbankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_bankCard_bank", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_bankCard_bank", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_bankCard_bank", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_bankCard_bank", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("Models.FK_bankCard_bank", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_bankCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_bankCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_bankCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_bankCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Models.FK_bankCard_card", "card", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static card Createcard(global::System.Int32 id)
        {
            card card = new card();
            card.ID = id;
            return card;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardNumber
        {
            get
            {
                return _cardNumber;
            }
            set
            {
                OncardNumberChanging(value);
                ReportPropertyChanging("cardNumber");
                _cardNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cardNumber");
                OncardNumberChanged();
            }
        }
        private global::System.String _cardNumber;
        partial void OncardNumberChanging(global::System.String value);
        partial void OncardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> expiryDate
        {
            get
            {
                return _expiryDate;
            }
            set
            {
                OnexpiryDateChanging(value);
                ReportPropertyChanging("expiryDate");
                _expiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiryDate");
                OnexpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _expiryDate;
        partial void OnexpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnexpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardTypeID
        {
            get
            {
                return _cardTypeID;
            }
            set
            {
                OncardTypeIDChanging(value);
                ReportPropertyChanging("cardTypeID");
                _cardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardTypeID");
                OncardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardTypeID;
        partial void OncardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_bankCard_card", "bankCard")]
        public EntityCollection<bankCard> bankCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<bankCard>("Models.FK_bankCard_card", "bankCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<bankCard>("Models.FK_bankCard_card", "bankCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_card_cardType", "cardType")]
        public cardType cardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_card_cardType", "cardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_card_cardType", "cardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cardType> cardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_card_cardType", "cardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cardType>("Models.FK_card_cardType", "cardType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccCard_card", "ccCard")]
        public EntityCollection<ccCard> ccCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccCard>("Models.FK_ccCard_card", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccCard>("Models.FK_ccCard_card", "ccCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbCard_card", "dbCard")]
        public EntityCollection<dbCard> dbCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dbCard>("Models.FK_dbCard_card", "dbCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dbCard>("Models.FK_dbCard_card", "dbCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityCard_card", "entityCard")]
        public EntityCollection<entityCard> entityCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityCard>("Models.FK_entityCard_card", "entityCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityCard>("Models.FK_entityCard_card", "entityCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_card", "externalPayment")]
        public EntityCollection<externalPayment> externalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalPayment>("Models.FK_externalPayment_card", "externalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalPayment>("Models.FK_externalPayment_card", "externalPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="cardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cardType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static cardType CreatecardType(global::System.Int32 id)
        {
            cardType cardType = new cardType();
            cardType.ID = id;
            return cardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_card_cardType", "card")]
        public EntityCollection<card> card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<card>("Models.FK_card_cardType", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<card>("Models.FK_card_cardType", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbCard_cardType", "dbCard")]
        public EntityCollection<dbCard> dbCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dbCard>("Models.FK_dbCard_cardType", "dbCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dbCard>("Models.FK_dbCard_cardType", "dbCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_fee_cardType", "fee")]
        public EntityCollection<fee> fee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fee>("Models.FK_fee_cardType", "fee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fee>("Models.FK_fee_cardType", "fee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static category Createcategory(global::System.Int32 id)
        {
            category category = new category();
            category.ID = id;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceCategory_category", "resourceCategory")]
        public EntityCollection<resourceCategory> resourceCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<resourceCategory>("Models.FK_resourceCategory_category", "resourceCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<resourceCategory>("Models.FK_resourceCategory_category", "resourceCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="categoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class categoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new categoryType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static categoryType CreatecategoryType(global::System.Int32 id)
        {
            categoryType categoryType = new categoryType();
            categoryType.ID = id;
            return categoryType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> glTypeID
        {
            get
            {
                return _glTypeID;
            }
            set
            {
                OnglTypeIDChanging(value);
                ReportPropertyChanging("glTypeID");
                _glTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("glTypeID");
                OnglTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _glTypeID;
        partial void OnglTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnglTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_categoryType", "account")]
        public EntityCollection<account> account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("Models.FK_account_categoryType", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("Models.FK_account_categoryType", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_categoryType_glType", "glType")]
        public glType glType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<glType>("Models.FK_categoryType_glType", "glType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<glType>("Models.FK_categoryType_glType", "glType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<glType> glTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<glType>("Models.FK_categoryType_glType", "glType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<glType>("Models.FK_categoryType_glType", "glType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="ccCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ccCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ccCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ccCard CreateccCard(global::System.Int32 id)
        {
            ccCard ccCard = new ccCard();
            ccCard.ID = id;
            return ccCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardTypeID
        {
            get
            {
                return _ccCardTypeID;
            }
            set
            {
                OnccCardTypeIDChanging(value);
                ReportPropertyChanging("ccCardTypeID");
                _ccCardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardTypeID");
                OnccCardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardTypeID;
        partial void OnccCardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_ccCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_ccCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_ccCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Models.FK_ccCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccCard_cardType", "ccCardType")]
        public ccCardType ccCardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccCard_cardType", "ccCardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccCard_cardType", "ccCardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ccCardType> ccCardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccCard_cardType", "ccCardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ccCardType>("Models.FK_ccCard_cardType", "ccCardType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_mcCard_ccCard", "mcCard")]
        public EntityCollection<mcCard> mcCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mcCard>("Models.FK_mcCard_ccCard", "mcCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mcCard>("Models.FK_mcCard_ccCard", "mcCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_visaCard_ccCard", "visaCard")]
        public EntityCollection<visaCard> visaCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<visaCard>("Models.FK_visaCard_ccCard", "visaCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<visaCard>("Models.FK_visaCard_ccCard", "visaCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="ccCardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ccCardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ccCardType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ccCardType CreateccCardType(global::System.Int32 id)
        {
            ccCardType ccCardType = new ccCardType();
            ccCardType.ID = id;
            return ccCardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccCard_cardType", "ccCard")]
        public EntityCollection<ccCard> ccCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccCard>("Models.FK_ccCard_cardType", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccCard>("Models.FK_ccCard_cardType", "ccCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccFee_ccCardType", "ccFee")]
        public EntityCollection<ccFee> ccFee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccFee>("Models.FK_ccFee_ccCardType", "ccFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccFee>("Models.FK_ccFee_ccCardType", "ccFee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="ccFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ccFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ccFee object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ccFee CreateccFee(global::System.Int32 id)
        {
            ccFee ccFee = new ccFee();
            ccFee.ID = id;
            return ccFee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bankID
        {
            get
            {
                return _bankID;
            }
            set
            {
                OnbankIDChanging(value);
                ReportPropertyChanging("bankID");
                _bankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bankID");
                OnbankIDChanged();
            }
        }
        private Nullable<global::System.Int32> _bankID;
        partial void OnbankIDChanging(Nullable<global::System.Int32> value);
        partial void OnbankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardTypeID
        {
            get
            {
                return _ccCardTypeID;
            }
            set
            {
                OnccCardTypeIDChanging(value);
                ReportPropertyChanging("ccCardTypeID");
                _ccCardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardTypeID");
                OnccCardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardTypeID;
        partial void OnccCardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccFee_bank", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_ccFee_bank", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_ccFee_bank", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_ccFee_bank", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("Models.FK_ccFee_bank", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccFee_ccCardType", "ccCardType")]
        public ccCardType ccCardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccFee_ccCardType", "ccCardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccFee_ccCardType", "ccCardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ccCardType> ccCardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCardType>("Models.FK_ccFee_ccCardType", "ccCardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ccCardType>("Models.FK_ccFee_ccCardType", "ccCardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="ccPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ccPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ccPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ccPayment CreateccPayment(global::System.Int32 id)
        {
            ccPayment ccPayment = new ccPayment();
            ccPayment.ID = id;
            return ccPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> extPaymentID
        {
            get
            {
                return _extPaymentID;
            }
            set
            {
                OnextPaymentIDChanging(value);
                ReportPropertyChanging("extPaymentID");
                _extPaymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("extPaymentID");
                OnextPaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _extPaymentID;
        partial void OnextPaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnextPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccPayment_externalPayment", "externalPayment")]
        public externalPayment externalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_ccPayment_externalPayment", "externalPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_ccPayment_externalPayment", "externalPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<externalPayment> externalPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_ccPayment_externalPayment", "externalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<externalPayment>("Models.FK_ccPayment_externalPayment", "externalPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="city")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class city : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new city object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static city Createcity(global::System.Int32 id)
        {
            city city = new city();
            city.ID = id;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_city", "address")]
        public EntityCollection<address> address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("Models.FK_address_city", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("Models.FK_address_city", "address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static country Createcountry(global::System.Int32 id)
        {
            country country = new country();
            country.ID = id;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_country", "address")]
        public EntityCollection<address> address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("Models.FK_address_country", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("Models.FK_address_country", "address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currency object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static currency Createcurrency(global::System.Int32 id)
        {
            currency currency = new currency();
            currency.ID = id;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyTypeID
        {
            get
            {
                return _currencyTypeID;
            }
            set
            {
                OncurrencyTypeIDChanging(value);
                ReportPropertyChanging("currencyTypeID");
                _currencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyTypeID");
                OncurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyTypeID;
        partial void OncurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_currency", "account")]
        public EntityCollection<account> account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("Models.FK_account_currency", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("Models.FK_account_currency", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_currency_currencyType", "currencyType")]
        public currencyType currencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencyType>("Models.FK_currency_currencyType", "currencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencyType>("Models.FK_currency_currencyType", "currencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currencyType> currencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencyType>("Models.FK_currency_currencyType", "currencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currencyType>("Models.FK_currency_currencyType", "currencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWallet_currency", "entityWallet")]
        public EntityCollection<entityWallet> entityWallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityWallet>("Models.FK_entityWallet_currency", "entityWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityWallet>("Models.FK_entityWallet_currency", "entityWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_currency", "invoice")]
        public EntityCollection<invoice> invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("Models.FK_invoice_currency", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("Models.FK_invoice_currency", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_currency", "invoiceService")]
        public EntityCollection<invoiceService> invoiceService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceService>("Models.FK_invoiceService_currency", "invoiceService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceService>("Models.FK_invoiceService_currency", "invoiceService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_currency", "payment")]
        public EntityCollection<payment> payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("Models.FK_payment_currency", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("Models.FK_payment_currency", "payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="currencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currencyType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static currencyType CreatecurrencyType(global::System.Int32 id)
        {
            currencyType currencyType = new currencyType();
            currencyType.ID = id;
            return currencyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_currency_currencyType", "currency")]
        public EntityCollection<currency> currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<currency>("Models.FK_currency_currencyType", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<currency>("Models.FK_currency_currencyType", "currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="dbCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dbCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dbCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static dbCard CreatedbCard(global::System.Int32 id)
        {
            dbCard dbCard = new dbCard();
            dbCard.ID = id;
            return dbCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardTypeID
        {
            get
            {
                return _cardTypeID;
            }
            set
            {
                OncardTypeIDChanging(value);
                ReportPropertyChanging("cardTypeID");
                _cardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardTypeID");
                OncardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardTypeID;
        partial void OncardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_dbCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_dbCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_dbCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Models.FK_dbCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbCard_cardType", "cardType")]
        public cardType cardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_dbCard_cardType", "cardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_dbCard_cardType", "cardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cardType> cardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_dbCard_cardType", "cardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cardType>("Models.FK_dbCard_cardType", "cardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="dbPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dbPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dbPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static dbPayment CreatedbPayment(global::System.Int32 id)
        {
            dbPayment dbPayment = new dbPayment();
            dbPayment.ID = id;
            return dbPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> extPaymentID
        {
            get
            {
                return _extPaymentID;
            }
            set
            {
                OnextPaymentIDChanging(value);
                ReportPropertyChanging("extPaymentID");
                _extPaymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("extPaymentID");
                OnextPaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _extPaymentID;
        partial void OnextPaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnextPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbPayment_externalPayment", "externalPayment")]
        public externalPayment externalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_dbPayment_externalPayment", "externalPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_dbPayment_externalPayment", "externalPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<externalPayment> externalPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalPayment>("Models.FK_dbPayment_externalPayment", "externalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<externalPayment>("Models.FK_dbPayment_externalPayment", "externalPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new document object.
        /// </summary>
        /// <param name="document_id">Initial value of the document_id property.</param>
        public static document Createdocument(global::System.Int32 document_id)
        {
            document document = new document();
            document.document_id = document_id;
            return document;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 document_id
        {
            get
            {
                return _document_id;
            }
            set
            {
                if (_document_id != value)
                {
                    Ondocument_idChanging(value);
                    ReportPropertyChanging("document_id");
                    _document_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("document_id");
                    Ondocument_idChanged();
                }
            }
        }
        private global::System.Int32 _document_id;
        partial void Ondocument_idChanging(global::System.Int32 value);
        partial void Ondocument_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String filename
        {
            get
            {
                return _filename;
            }
            set
            {
                OnfilenameChanging(value);
                ReportPropertyChanging("filename");
                _filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("filename");
                OnfilenameChanged();
            }
        }
        private global::System.String _filename;
        partial void OnfilenameChanging(global::System.String value);
        partial void OnfilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fileext
        {
            get
            {
                return _fileext;
            }
            set
            {
                OnfileextChanging(value);
                ReportPropertyChanging("fileext");
                _fileext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fileext");
                OnfileextChanged();
            }
        }
        private global::System.String _fileext;
        partial void OnfileextChanging(global::System.String value);
        partial void OnfileextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_timestamp);
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.Byte[] _timestamp;
        partial void OntimestampChanging(global::System.Byte[] value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_document_object_document_object", "document_object")]
        public EntityCollection<document_object> document_object
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<document_object>("Models.FK_document_object_document_object", "document_object");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<document_object>("Models.FK_document_object_document_object", "document_object", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="document_object")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class document_object : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new document_object object.
        /// </summary>
        /// <param name="doc_obj_id">Initial value of the doc_obj_id property.</param>
        public static document_object Createdocument_object(global::System.Int32 doc_obj_id)
        {
            document_object document_object = new document_object();
            document_object.doc_obj_id = doc_obj_id;
            return document_object;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 doc_obj_id
        {
            get
            {
                return _doc_obj_id;
            }
            set
            {
                if (_doc_obj_id != value)
                {
                    Ondoc_obj_idChanging(value);
                    ReportPropertyChanging("doc_obj_id");
                    _doc_obj_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("doc_obj_id");
                    Ondoc_obj_idChanged();
                }
            }
        }
        private global::System.Int32 _doc_obj_id;
        partial void Ondoc_obj_idChanging(global::System.Int32 value);
        partial void Ondoc_obj_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> document_id
        {
            get
            {
                return _document_id;
            }
            set
            {
                Ondocument_idChanging(value);
                ReportPropertyChanging("document_id");
                _document_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("document_id");
                Ondocument_idChanged();
            }
        }
        private Nullable<global::System.Int32> _document_id;
        partial void Ondocument_idChanging(Nullable<global::System.Int32> value);
        partial void Ondocument_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> object_id
        {
            get
            {
                return _object_id;
            }
            set
            {
                Onobject_idChanging(value);
                ReportPropertyChanging("object_id");
                _object_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("object_id");
                Onobject_idChanged();
            }
        }
        private Nullable<global::System.Int32> _object_id;
        partial void Onobject_idChanging(Nullable<global::System.Int32> value);
        partial void Onobject_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_document_object_document_object", "document")]
        public document document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<document>("Models.FK_document_object_document_object", "document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<document>("Models.FK_document_object_document_object", "document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<document> documentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<document>("Models.FK_document_object_document_object", "document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<document>("Models.FK_document_object_document_object", "document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entity object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entity Createentity(global::System.Int32 id)
        {
            entity entity = new entity();
            entity.ID = id;
            return entity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityTypeID
        {
            get
            {
                return _entityTypeID;
            }
            set
            {
                OnentityTypeIDChanging(value);
                ReportPropertyChanging("entityTypeID");
                _entityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityTypeID");
                OnentityTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityTypeID;
        partial void OnentityTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_account_entity", "account")]
        public EntityCollection<account> account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("Models.FK_account_entity", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("Models.FK_account_entity", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entity_entityType", "entityType")]
        public entityType entityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityType>("Models.FK_entity_entityType", "entityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityType>("Models.FK_entity_entityType", "entityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entityType> entityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityType>("Models.FK_entity_entityType", "entityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entityType>("Models.FK_entity_entityType", "entityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityCard_entity", "entityCard")]
        public EntityCollection<entityCard> entityCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityCard>("Models.FK_entityCard_entity", "entityCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityCard>("Models.FK_entityCard_entity", "entityCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWallet_entity", "entityWallet")]
        public EntityCollection<entityWallet> entityWallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityWallet>("Models.FK_entityWallet_entity", "entityWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityWallet>("Models.FK_entityWallet_entity", "entityWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_issuer", "invoice")]
        public EntityCollection<invoice> invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("Models.FK_invoice_issuer", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("Models.FK_invoice_issuer", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_receiver", "invoice")]
        public EntityCollection<invoice> invoice1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("Models.FK_invoice_receiver", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("Models.FK_invoice_receiver", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_organization_entity", "organization")]
        public EntityCollection<organization> organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<organization>("Models.FK_organization_entity", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<organization>("Models.FK_organization_entity", "organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_entitypayee", "payment")]
        public EntityCollection<payment> payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("Models.FK_payment_entitypayee", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("Models.FK_payment_entitypayee", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_entitypayer", "payment")]
        public EntityCollection<payment> payment1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("Models.FK_payment_entitypayer", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("Models.FK_payment_entitypayer", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_entity", "person")]
        public EntityCollection<person> person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<person>("Models.FK_person_entity", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<person>("Models.FK_person_entity", "person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_service_entitygiver", "service")]
        public EntityCollection<service> service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<service>("Models.FK_service_entitygiver", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<service>("Models.FK_service_entitygiver", "service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_service_entityreceiver", "service")]
        public EntityCollection<service> service1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<service>("Models.FK_service_entityreceiver", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<service>("Models.FK_service_entityreceiver", "service", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="entityCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entityCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entityCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entityCard CreateentityCard(global::System.Int32 id)
        {
            entityCard entityCard = new entityCard();
            entityCard.ID = id;
            return entityCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CardID;
        partial void OnCardIDChanging(Nullable<global::System.Int32> value);
        partial void OnCardIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_entityCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_entityCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_entityCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Models.FK_entityCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityCard_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityCard_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityCard_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityCard_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_entityCard_entity", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="entityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entityType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entityType CreateentityType(global::System.Int32 id)
        {
            entityType entityType = new entityType();
            entityType.ID = id;
            return entityType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entity_entityType", "entity")]
        public EntityCollection<entity> entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entity>("Models.FK_entity_entityType", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entity>("Models.FK_entity_entityType", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="entityWallet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entityWallet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entityWallet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entityWallet CreateentityWallet(global::System.Int32 id)
        {
            entityWallet entityWallet = new entityWallet();
            entityWallet.ID = id;
            return entityWallet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWallet_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_entityWallet_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_entityWallet_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_entityWallet_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("Models.FK_entityWallet_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWallet_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityWallet_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityWallet_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_entityWallet_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_entityWallet_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWalletTransaction_entityWallet", "entityWalletTransaction")]
        public EntityCollection<entityWalletTransaction> entityWalletTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityWalletTransaction>("Models.FK_entityWalletTransaction_entityWallet", "entityWalletTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityWalletTransaction>("Models.FK_entityWalletTransaction_entityWallet", "entityWalletTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="entityWalletTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entityWalletTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entityWalletTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entityWalletTransaction CreateentityWalletTransaction(global::System.Int32 id)
        {
            entityWalletTransaction entityWalletTransaction = new entityWalletTransaction();
            entityWalletTransaction.ID = id;
            return entityWalletTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityWalletID
        {
            get
            {
                return _entityWalletID;
            }
            set
            {
                OnentityWalletIDChanging(value);
                ReportPropertyChanging("entityWalletID");
                _entityWalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityWalletID");
                OnentityWalletIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityWalletID;
        partial void OnentityWalletIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                OntransactionIDChanging(value);
                ReportPropertyChanging("transactionID");
                _transactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transactionID");
                OntransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transactionID;
        partial void OntransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OntransactionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWalletTransaction_entityWallet", "entityWallet")]
        public entityWallet entityWallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityWallet>("Models.FK_entityWalletTransaction_entityWallet", "entityWallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityWallet>("Models.FK_entityWalletTransaction_entityWallet", "entityWallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entityWallet> entityWalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entityWallet>("Models.FK_entityWalletTransaction_entityWallet", "entityWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entityWallet>("Models.FK_entityWalletTransaction_entityWallet", "entityWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWalletTransaction_transaction", "transaction")]
        public transaction transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_entityWalletTransaction_transaction", "transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_entityWalletTransaction_transaction", "transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transaction> transactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_entityWalletTransaction_transaction", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transaction>("Models.FK_entityWalletTransaction_transaction", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="externalPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class externalPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new externalPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static externalPayment CreateexternalPayment(global::System.Int32 id)
        {
            externalPayment externalPayment = new externalPayment();
            externalPayment.ID = id;
            return externalPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentID
        {
            get
            {
                return _paymentID;
            }
            set
            {
                OnpaymentIDChanging(value);
                ReportPropertyChanging("paymentID");
                _paymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentID");
                OnpaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentID;
        partial void OnpaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> extPaymentTypeID
        {
            get
            {
                return _extPaymentTypeID;
            }
            set
            {
                OnextPaymentTypeIDChanging(value);
                ReportPropertyChanging("extPaymentTypeID");
                _extPaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("extPaymentTypeID");
                OnextPaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _extPaymentTypeID;
        partial void OnextPaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnextPaymentTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_externalPayment_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_externalPayment_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("Models.FK_externalPayment_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("Models.FK_externalPayment_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_ccPayment_externalPayment", "ccPayment")]
        public EntityCollection<ccPayment> ccPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccPayment>("Models.FK_ccPayment_externalPayment", "ccPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccPayment>("Models.FK_ccPayment_externalPayment", "ccPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_dbPayment_externalPayment", "dbPayment")]
        public EntityCollection<dbPayment> dbPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dbPayment>("Models.FK_dbPayment_externalPayment", "dbPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dbPayment>("Models.FK_dbPayment_externalPayment", "dbPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_extPaymentType", "extPaymentType")]
        public extPaymentType extPaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<extPaymentType>("Models.FK_externalPayment_extPaymentType", "extPaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<extPaymentType>("Models.FK_externalPayment_extPaymentType", "extPaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<extPaymentType> extPaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<extPaymentType>("Models.FK_externalPayment_extPaymentType", "extPaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<extPaymentType>("Models.FK_externalPayment_extPaymentType", "extPaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_payment", "payment")]
        public payment payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_externalPayment_payment", "payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_externalPayment_payment", "payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<payment> paymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_externalPayment_payment", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<payment>("Models.FK_externalPayment_payment", "payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="extPaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class extPaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new extPaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static extPaymentType CreateextPaymentType(global::System.Int32 id)
        {
            extPaymentType extPaymentType = new extPaymentType();
            extPaymentType.ID = id;
            return extPaymentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_extPaymentType", "externalPayment")]
        public EntityCollection<externalPayment> externalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalPayment>("Models.FK_externalPayment_extPaymentType", "externalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalPayment>("Models.FK_externalPayment_extPaymentType", "externalPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="fee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fee object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static fee Createfee(global::System.Int32 id)
        {
            fee fee = new fee();
            fee.ID = id;
            return fee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bankID
        {
            get
            {
                return _bankID;
            }
            set
            {
                OnbankIDChanging(value);
                ReportPropertyChanging("bankID");
                _bankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bankID");
                OnbankIDChanged();
            }
        }
        private Nullable<global::System.Int32> _bankID;
        partial void OnbankIDChanging(Nullable<global::System.Int32> value);
        partial void OnbankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardTypeID
        {
            get
            {
                return _cardTypeID;
            }
            set
            {
                OncardTypeIDChanging(value);
                ReportPropertyChanging("cardTypeID");
                _cardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardTypeID");
                OncardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardTypeID;
        partial void OncardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncardTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_fee_bank", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_fee_bank", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_fee_bank", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("Models.FK_fee_bank", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("Models.FK_fee_bank", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_fee_cardType", "cardType")]
        public cardType cardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_fee_cardType", "cardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_fee_cardType", "cardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cardType> cardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cardType>("Models.FK_fee_cardType", "cardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cardType>("Models.FK_fee_cardType", "cardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="foldering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class foldering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new foldering object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static foldering Createfoldering(global::System.Int32 id)
        {
            foldering foldering = new foldering();
            foldering.ID = id;
            return foldering;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_id;
        partial void Onparent_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String timestamp
        {
            get
            {
                return _timestamp;
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.String _timestamp;
        partial void OntimestampChanging(global::System.String value);
        partial void OntimestampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_topic_foldering", "topics")]
        public EntityCollection<topics> topics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<topics>("Models.FK_topic_foldering", "topics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<topics>("Models.FK_topic_foldering", "topics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="glType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class glType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new glType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static glType CreateglType(global::System.Int32 id)
        {
            glType glType = new glType();
            glType.ID = id;
            return glType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_categoryType_glType", "categoryType")]
        public EntityCollection<categoryType> categoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<categoryType>("Models.FK_categoryType_glType", "categoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<categoryType>("Models.FK_categoryType_glType", "categoryType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="internalPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class internalPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new internalPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static internalPayment CreateinternalPayment(global::System.Int32 id)
        {
            internalPayment internalPayment = new internalPayment();
            internalPayment.ID = id;
            return internalPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentID
        {
            get
            {
                return _paymentID;
            }
            set
            {
                OnpaymentIDChanging(value);
                ReportPropertyChanging("paymentID");
                _paymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentID");
                OnpaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentID;
        partial void OnpaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_internalPayment_payment", "payment")]
        public payment payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_internalPayment_payment", "payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_internalPayment_payment", "payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<payment> paymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_internalPayment_payment", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<payment>("Models.FK_internalPayment_payment", "payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    
    public partial class invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoice Createinvoice(global::System.Int32 id)
        {
            invoice invoice = new invoice();
            invoice.ID = id;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuerEntityID
        {
            get
            {
                return _issuerEntityID;
            }
            set
            {
                OnissuerEntityIDChanging(value);
                ReportPropertyChanging("issuerEntityID");
                _issuerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issuerEntityID");
                OnissuerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _issuerEntityID;
        partial void OnissuerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnissuerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverEntityID
        {
            get
            {
                return _receiverEntityID;
            }
            set
            {
                OnreceiverEntityIDChanging(value);
                ReportPropertyChanging("receiverEntityID");
                _receiverEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverEntityID");
                OnreceiverEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverEntityID;
        partial void OnreceiverEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoice_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoice_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoice_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("Models.FK_invoice_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_issuer", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_issuer", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_issuer", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_issuer", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_invoice_issuer", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoice_receiver", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_receiver", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_receiver", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_invoice_receiver", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_invoice_receiver", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceAction_invoice", "invoiceAction")]
        public EntityCollection<invoiceAction> invoiceAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceAction>("Models.FK_invoiceAction_invoice", "invoiceAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceAction>("Models.FK_invoiceAction_invoice", "invoiceAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoicePayment_invoice", "invoicePayment")]
        public EntityCollection<invoicePayment> invoicePayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoicePayment>("Models.FK_invoicePayment_invoice", "invoicePayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoicePayment>("Models.FK_invoicePayment_invoice", "invoicePayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_invoice", "invoiceService")]
        public EntityCollection<invoiceService> invoiceService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceService>("Models.FK_invoiceService_invoice", "invoiceService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceService>("Models.FK_invoiceService_invoice", "invoiceService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoiceAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceAction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceAction CreateinvoiceAction(global::System.Int32 id)
        {
            invoiceAction invoiceAction = new invoiceAction();
            invoiceAction.ID = id;
            return invoiceAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceID
        {
            get
            {
                return _invoiceID;
            }
            set
            {
                OninvoiceIDChanging(value);
                ReportPropertyChanging("invoiceID");
                _invoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceID");
                OninvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceID;
        partial void OninvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceStatID
        {
            get
            {
                return _invoiceStatID;
            }
            set
            {
                OninvoiceStatIDChanging(value);
                ReportPropertyChanging("invoiceStatID");
                _invoiceStatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceStatID");
                OninvoiceStatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceStatID;
        partial void OninvoiceStatIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceStatIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceAction_invoice", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceAction_invoice", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceAction_invoice", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceAction_invoice", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("Models.FK_invoiceAction_invoice", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceAction_invoiceStat", "invoiceStat")]
        public invoiceStat invoiceStat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceStat>("Models.FK_invoiceAction_invoiceStat", "invoiceStat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceStat>("Models.FK_invoiceAction_invoiceStat", "invoiceStat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoiceStat> invoiceStatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceStat>("Models.FK_invoiceAction_invoiceStat", "invoiceStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoiceStat>("Models.FK_invoiceAction_invoiceStat", "invoiceStat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceActionTransaction_invoiceAction", "invoiceActionTransaction")]
        public EntityCollection<invoiceActionTransaction> invoiceActionTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceActionTransaction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceActionTransaction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceActionTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoiceActionTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceActionTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceActionTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceActionTransaction CreateinvoiceActionTransaction(global::System.Int32 id)
        {
            invoiceActionTransaction invoiceActionTransaction = new invoiceActionTransaction();
            invoiceActionTransaction.ID = id;
            return invoiceActionTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceActionID
        {
            get
            {
                return _invoiceActionID;
            }
            set
            {
                OninvoiceActionIDChanging(value);
                ReportPropertyChanging("invoiceActionID");
                _invoiceActionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceActionID");
                OninvoiceActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceActionID;
        partial void OninvoiceActionIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                OntransactionIDChanging(value);
                ReportPropertyChanging("transactionID");
                _transactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transactionID");
                OntransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transactionID;
        partial void OntransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OntransactionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceActionTransaction_invoiceAction", "invoiceAction")]
        public invoiceAction invoiceAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceAction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceAction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoiceAction> invoiceActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoiceAction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoiceAction>("Models.FK_invoiceActionTransaction_invoiceAction", "invoiceAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceActionTransaction_transaction", "transaction")]
        public transaction transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_invoiceActionTransaction_transaction", "transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_invoiceActionTransaction_transaction", "transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transaction> transactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_invoiceActionTransaction_transaction", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transaction>("Models.FK_invoiceActionTransaction_transaction", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoicePayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoicePayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoicePayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoicePayment CreateinvoicePayment(global::System.Int32 id)
        {
            invoicePayment invoicePayment = new invoicePayment();
            invoicePayment.ID = id;
            return invoicePayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceID
        {
            get
            {
                return _invoiceID;
            }
            set
            {
                OninvoiceIDChanging(value);
                ReportPropertyChanging("invoiceID");
                _invoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceID");
                OninvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceID;
        partial void OninvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentID
        {
            get
            {
                return _paymentID;
            }
            set
            {
                OnpaymentIDChanging(value);
                ReportPropertyChanging("paymentID");
                _paymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentID");
                OnpaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentID;
        partial void OnpaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoicePayment_invoice", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoicePayment_invoice", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoicePayment_invoice", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoicePayment_invoice", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("Models.FK_invoicePayment_invoice", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoicePayment_payment", "payment")]
        public payment payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_invoicePayment_payment", "payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_invoicePayment_payment", "payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<payment> paymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_invoicePayment_payment", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<payment>("Models.FK_invoicePayment_payment", "payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoiceService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceService object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceService CreateinvoiceService(global::System.Int32 id)
        {
            invoiceService invoiceService = new invoiceService();
            invoiceService.ID = id;
            return invoiceService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceID
        {
            get
            {
                return _invoiceID;
            }
            set
            {
                OninvoiceIDChanging(value);
                ReportPropertyChanging("invoiceID");
                _invoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceID");
                OninvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceID;
        partial void OninvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> serviceID
        {
            get
            {
                return _serviceID;
            }
            set
            {
                OnserviceIDChanging(value);
                ReportPropertyChanging("serviceID");
                _serviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("serviceID");
                OnserviceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _serviceID;
        partial void OnserviceIDChanging(Nullable<global::System.Int32> value);
        partial void OnserviceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoiceService_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoiceService_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_invoiceService_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("Models.FK_invoiceService_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_invoice", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceService_invoice", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceService_invoice", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("Models.FK_invoiceService_invoice", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("Models.FK_invoiceService_invoice", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_service", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<service>("Models.FK_invoiceService_service", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<service>("Models.FK_invoiceService_service", "service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<service>("Models.FK_invoiceService_service", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<service>("Models.FK_invoiceService_service", "service", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="invoiceStat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceStat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceStat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceStat CreateinvoiceStat(global::System.Int32 id)
        {
            invoiceStat invoiceStat = new invoiceStat();
            invoiceStat.ID = id;
            return invoiceStat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceAction_invoiceStat", "invoiceAction")]
        public EntityCollection<invoiceAction> invoiceAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceAction>("Models.FK_invoiceAction_invoiceStat", "invoiceAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceAction>("Models.FK_invoiceAction_invoiceStat", "invoiceAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class login : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new login object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static login Createlogin(global::System.Int32 id)
        {
            login login = new login();
            login.ID = id;
            return login;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="lu_acl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_acl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_acl object.
        /// </summary>
        /// <param name="acl_id">Initial value of the acl_id property.</param>
        public static lu_acl Createlu_acl(global::System.Int32 acl_id)
        {
            lu_acl lu_acl = new lu_acl();
            lu_acl.acl_id = acl_id;
            return lu_acl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 acl_id
        {
            get
            {
                return _acl_id;
            }
            set
            {
                if (_acl_id != value)
                {
                    Onacl_idChanging(value);
                    ReportPropertyChanging("acl_id");
                    _acl_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("acl_id");
                    Onacl_idChanged();
                }
            }
        }
        private global::System.Int32 _acl_id;
        partial void Onacl_idChanging(global::System.Int32 value);
        partial void Onacl_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_acl", "rca")]
        public EntityCollection<rca> rca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rca>("Models.FK_rca_lu_acl", "rca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rca>("Models.FK_rca_lu_acl", "rca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="lu_component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_component object.
        /// </summary>
        /// <param name="component_id">Initial value of the component_id property.</param>
        public static lu_component Createlu_component(global::System.Int32 component_id)
        {
            lu_component lu_component = new lu_component();
            lu_component.component_id = component_id;
            return lu_component;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 component_id
        {
            get
            {
                return _component_id;
            }
            set
            {
                if (_component_id != value)
                {
                    Oncomponent_idChanging(value);
                    ReportPropertyChanging("component_id");
                    _component_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("component_id");
                    Oncomponent_idChanged();
                }
            }
        }
        private global::System.Int32 _component_id;
        partial void Oncomponent_idChanging(global::System.Int32 value);
        partial void Oncomponent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_component", "rca")]
        public EntityCollection<rca> rca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rca>("Models.FK_rca_lu_component", "rca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rca>("Models.FK_rca_lu_component", "rca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="lu_role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_role object.
        /// </summary>
        /// <param name="role_id">Initial value of the role_id property.</param>
        public static lu_role Createlu_role(global::System.Int32 role_id)
        {
            lu_role lu_role = new lu_role();
            lu_role.role_id = role_id;
            return lu_role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                if (_role_id != value)
                {
                    Onrole_idChanging(value);
                    ReportPropertyChanging("role_id");
                    _role_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("role_id");
                    Onrole_idChanged();
                }
            }
        }
        private global::System.Int32 _role_id;
        partial void Onrole_idChanging(global::System.Int32 value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String role_name
        {
            get
            {
                return _role_name;
            }
            set
            {
                Onrole_nameChanging(value);
                ReportPropertyChanging("role_name");
                _role_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("role_name");
                Onrole_nameChanged();
            }
        }
        private global::System.String _role_name;
        partial void Onrole_nameChanging(global::System.String value);
        partial void Onrole_nameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_permission_lu_role", "permission")]
        public EntityCollection<permission> permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<permission>("Models.FK_permission_lu_role", "permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<permission>("Models.FK_permission_lu_role", "permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_role", "rca")]
        public EntityCollection<rca> rca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rca>("Models.FK_rca_lu_role", "rca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rca>("Models.FK_rca_lu_role", "rca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="lu_task_status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_task_status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_task_status object.
        /// </summary>
        /// <param name="type_id">Initial value of the type_id property.</param>
        public static lu_task_status Createlu_task_status(global::System.Int32 type_id)
        {
            lu_task_status lu_task_status = new lu_task_status();
            lu_task_status.type_id = type_id;
            return lu_task_status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type_id
        {
            get
            {
                return _type_id;
            }
            set
            {
                if (_type_id != value)
                {
                    Ontype_idChanging(value);
                    ReportPropertyChanging("type_id");
                    _type_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("type_id");
                    Ontype_idChanged();
                }
            }
        }
        private global::System.Int32 _type_id;
        partial void Ontype_idChanging(global::System.Int32 value);
        partial void Ontype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type_name
        {
            get
            {
                return _type_name;
            }
            set
            {
                Ontype_nameChanging(value);
                ReportPropertyChanging("type_name");
                _type_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type_name");
                Ontype_nameChanged();
            }
        }
        private global::System.String _type_name;
        partial void Ontype_nameChanging(global::System.String value);
        partial void Ontype_nameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_lu_task_status", "task")]
        public EntityCollection<task> task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task>("Models.FK_task_lu_task_status", "task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task>("Models.FK_task_lu_task_status", "task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_person_lu_task_status", "task_person")]
        public EntityCollection<task_person> task_person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task_person>("Models.FK_task_person_lu_task_status", "task_person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task_person>("Models.FK_task_person_lu_task_status", "task_person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="mcCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mcCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mcCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static mcCard CreatemcCard(global::System.Int32 id)
        {
            mcCard mcCard = new mcCard();
            mcCard.ID = id;
            return mcCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardID
        {
            get
            {
                return _ccCardID;
            }
            set
            {
                OnccCardIDChanging(value);
                ReportPropertyChanging("ccCardID");
                _ccCardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardID");
                OnccCardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardID;
        partial void OnccCardIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_mcCard_ccCard", "ccCard")]
        public ccCard ccCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_mcCard_ccCard", "ccCard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_mcCard_ccCard", "ccCard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ccCard> ccCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_mcCard_ccCard", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ccCard>("Models.FK_mcCard_ccCard", "ccCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="module_features")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class module_features : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new module_features object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static module_features Createmodule_features(global::System.Int32 id)
        {
            module_features module_features = new module_features();
            module_features.id = id;
            return module_features;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_id;
        partial void Onparent_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="office")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class office : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new office object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static office Createoffice(global::System.Int32 id)
        {
            office office = new office();
            office.ID = id;
            return office;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> officeTypeID
        {
            get
            {
                return _officeTypeID;
            }
            set
            {
                OnofficeTypeIDChanging(value);
                ReportPropertyChanging("officeTypeID");
                _officeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("officeTypeID");
                OnofficeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _officeTypeID;
        partial void OnofficeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnofficeTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_office_officeType", "officeType")]
        public officeType officeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<officeType>("Models.FK_office_officeType", "officeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<officeType>("Models.FK_office_officeType", "officeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<officeType> officeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<officeType>("Models.FK_office_officeType", "officeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<officeType>("Models.FK_office_officeType", "officeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_orgOffice_office", "orgOffice")]
        public EntityCollection<orgOffice> orgOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orgOffice>("Models.FK_orgOffice_office", "orgOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orgOffice>("Models.FK_orgOffice_office", "orgOffice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="officeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class officeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new officeType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static officeType CreateofficeType(global::System.Int32 id)
        {
            officeType officeType = new officeType();
            officeType.ID = id;
            return officeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_office_officeType", "office")]
        public EntityCollection<office> office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<office>("Models.FK_office_officeType", "office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<office>("Models.FK_office_officeType", "office", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new organization object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static organization Createorganization(global::System.Int32 id)
        {
            organization organization = new organization();
            organization.ID = id;
            return organization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_organization_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_organization_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_organization_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_organization_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_organization_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_orgOffice_organization", "orgOffice")]
        public EntityCollection<orgOffice> orgOffice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orgOffice>("Models.FK_orgOffice_organization", "orgOffice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orgOffice>("Models.FK_orgOffice_organization", "orgOffice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="organization1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organization1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new organization1 object.
        /// </summary>
        /// <param name="org_id">Initial value of the org_id property.</param>
        public static organization1 Createorganization1(global::System.Int32 org_id)
        {
            organization1 organization1 = new organization1();
            organization1.org_id = org_id;
            return organization1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 org_id
        {
            get
            {
                return _org_id;
            }
            set
            {
                if (_org_id != value)
                {
                    Onorg_idChanging(value);
                    ReportPropertyChanging("org_id");
                    _org_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("org_id");
                    Onorg_idChanged();
                }
            }
        }
        private global::System.Int32 _org_id;
        partial void Onorg_idChanging(global::System.Int32 value);
        partial void Onorg_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_org_id
        {
            get
            {
                return _parent_org_id;
            }
            set
            {
                Onparent_org_idChanging(value);
                ReportPropertyChanging("parent_org_id");
                _parent_org_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_org_id");
                Onparent_org_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_org_id;
        partial void Onparent_org_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_org_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String org_name
        {
            get
            {
                return _org_name;
            }
            set
            {
                Onorg_nameChanging(value);
                ReportPropertyChanging("org_name");
                _org_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("org_name");
                Onorg_nameChanged();
            }
        }
        private global::System.String _org_name;
        partial void Onorg_nameChanging(global::System.String value);
        partial void Onorg_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String street
        {
            get
            {
                return _street;
            }
            set
            {
                OnstreetChanging(value);
                ReportPropertyChanging("street");
                _street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("street");
                OnstreetChanged();
            }
        }
        private global::System.String _street;
        partial void OnstreetChanging(global::System.String value);
        partial void OnstreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String postalcode
        {
            get
            {
                return _postalcode;
            }
            set
            {
                OnpostalcodeChanging(value);
                ReportPropertyChanging("postalcode");
                _postalcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("postalcode");
                OnpostalcodeChanged();
            }
        }
        private global::System.String _postalcode;
        partial void OnpostalcodeChanging(global::System.String value);
        partial void OnpostalcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String logo
        {
            get
            {
                return _logo;
            }
            set
            {
                OnlogoChanging(value);
                ReportPropertyChanging("logo");
                _logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("logo");
                OnlogoChanged();
            }
        }
        private global::System.String _logo;
        partial void OnlogoChanging(global::System.String value);
        partial void OnlogoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_org_organization", "person_org")]
        public EntityCollection<person_org> person_org
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<person_org>("Models.FK_person_org_organization", "person_org");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<person_org>("Models.FK_person_org_organization", "person_org", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="orgOffice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class orgOffice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new orgOffice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static orgOffice CreateorgOffice(global::System.Int32 id)
        {
            orgOffice orgOffice = new orgOffice();
            orgOffice.ID = id;
            return orgOffice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> orgID
        {
            get
            {
                return _orgID;
            }
            set
            {
                OnorgIDChanging(value);
                ReportPropertyChanging("orgID");
                _orgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orgID");
                OnorgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _orgID;
        partial void OnorgIDChanging(Nullable<global::System.Int32> value);
        partial void OnorgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> officeID
        {
            get
            {
                return _officeID;
            }
            set
            {
                OnofficeIDChanging(value);
                ReportPropertyChanging("officeID");
                _officeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("officeID");
                OnofficeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _officeID;
        partial void OnofficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnofficeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_orgOffice_office", "office")]
        public office office
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<office>("Models.FK_orgOffice_office", "office").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<office>("Models.FK_orgOffice_office", "office").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<office> officeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<office>("Models.FK_orgOffice_office", "office");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<office>("Models.FK_orgOffice_office", "office", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_orgOffice_organization", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("Models.FK_orgOffice_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("Models.FK_orgOffice_organization", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("Models.FK_orgOffice_organization", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organization>("Models.FK_orgOffice_organization", "organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new payment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static payment Createpayment(global::System.Int32 id)
        {
            payment payment = new payment();
            payment.ID = id;
            return payment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> payerEntityID
        {
            get
            {
                return _payerEntityID;
            }
            set
            {
                OnpayerEntityIDChanging(value);
                ReportPropertyChanging("payerEntityID");
                _payerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payerEntityID");
                OnpayerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _payerEntityID;
        partial void OnpayerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnpayerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> payeeEntityID
        {
            get
            {
                return _payeeEntityID;
            }
            set
            {
                OnpayeeEntityIDChanging(value);
                ReportPropertyChanging("payeeEntityID");
                _payeeEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("payeeEntityID");
                OnpayeeEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _payeeEntityID;
        partial void OnpayeeEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnpayeeEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentTypeID
        {
            get
            {
                return _paymentTypeID;
            }
            set
            {
                OnpaymentTypeIDChanging(value);
                ReportPropertyChanging("paymentTypeID");
                _paymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentTypeID");
                OnpaymentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentTypeID;
        partial void OnpaymentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_payment_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_payment_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("Models.FK_payment_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("Models.FK_payment_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_entitypayee", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayee", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayee", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayee", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_payment_entitypayee", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_entitypayer", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayer", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayer", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_payment_entitypayer", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_payment_entitypayer", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_externalPayment_payment", "externalPayment")]
        public EntityCollection<externalPayment> externalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalPayment>("Models.FK_externalPayment_payment", "externalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalPayment>("Models.FK_externalPayment_payment", "externalPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_internalPayment_payment", "internalPayment")]
        public EntityCollection<internalPayment> internalPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<internalPayment>("Models.FK_internalPayment_payment", "internalPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<internalPayment>("Models.FK_internalPayment_payment", "internalPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoicePayment_payment", "invoicePayment")]
        public EntityCollection<invoicePayment> invoicePayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoicePayment>("Models.FK_invoicePayment_payment", "invoicePayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoicePayment>("Models.FK_invoicePayment_payment", "invoicePayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_paymentType", "paymentType")]
        public paymentType paymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentType>("Models.FK_payment_paymentType", "paymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentType>("Models.FK_payment_paymentType", "paymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<paymentType> paymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentType>("Models.FK_payment_paymentType", "paymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<paymentType>("Models.FK_payment_paymentType", "paymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentAction_payment", "paymentAction")]
        public EntityCollection<paymentAction> paymentAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<paymentAction>("Models.FK_paymentAction_payment", "paymentAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<paymentAction>("Models.FK_paymentAction_payment", "paymentAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="paymentAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class paymentAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentAction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static paymentAction CreatepaymentAction(global::System.Int32 id)
        {
            paymentAction paymentAction = new paymentAction();
            paymentAction.ID = id;
            return paymentAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentID
        {
            get
            {
                return _paymentID;
            }
            set
            {
                OnpaymentIDChanging(value);
                ReportPropertyChanging("paymentID");
                _paymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentID");
                OnpaymentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentID;
        partial void OnpaymentIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentStatID
        {
            get
            {
                return _paymentStatID;
            }
            set
            {
                OnpaymentStatIDChanging(value);
                ReportPropertyChanging("paymentStatID");
                _paymentStatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentStatID");
                OnpaymentStatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentStatID;
        partial void OnpaymentStatIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentStatIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentAction_payment", "payment")]
        public payment payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_paymentAction_payment", "payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_paymentAction_payment", "payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<payment> paymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<payment>("Models.FK_paymentAction_payment", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<payment>("Models.FK_paymentAction_payment", "payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentAction_paymentStat", "paymentStat")]
        public paymentStat paymentStat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentStat>("Models.FK_paymentAction_paymentStat", "paymentStat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentStat>("Models.FK_paymentAction_paymentStat", "paymentStat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<paymentStat> paymentStatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentStat>("Models.FK_paymentAction_paymentStat", "paymentStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<paymentStat>("Models.FK_paymentAction_paymentStat", "paymentStat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentActionTransaction_paymentAction", "paymentActionTransaction")]
        public EntityCollection<paymentActionTransaction> paymentActionTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<paymentActionTransaction>("Models.FK_paymentActionTransaction_paymentAction", "paymentActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<paymentActionTransaction>("Models.FK_paymentActionTransaction_paymentAction", "paymentActionTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="paymentActionTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class paymentActionTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentActionTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static paymentActionTransaction CreatepaymentActionTransaction(global::System.Int32 id)
        {
            paymentActionTransaction paymentActionTransaction = new paymentActionTransaction();
            paymentActionTransaction.ID = id;
            return paymentActionTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> paymentActionID
        {
            get
            {
                return _paymentActionID;
            }
            set
            {
                OnpaymentActionIDChanging(value);
                ReportPropertyChanging("paymentActionID");
                _paymentActionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paymentActionID");
                OnpaymentActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _paymentActionID;
        partial void OnpaymentActionIDChanging(Nullable<global::System.Int32> value);
        partial void OnpaymentActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                OntransactionIDChanging(value);
                ReportPropertyChanging("transactionID");
                _transactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transactionID");
                OntransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transactionID;
        partial void OntransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OntransactionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentActionTransaction_paymentAction", "paymentAction")]
        public paymentAction paymentAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentAction>("Models.FK_paymentActionTransaction_paymentAction", "paymentAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentAction>("Models.FK_paymentActionTransaction_paymentAction", "paymentAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<paymentAction> paymentActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<paymentAction>("Models.FK_paymentActionTransaction_paymentAction", "paymentAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<paymentAction>("Models.FK_paymentActionTransaction_paymentAction", "paymentAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentActionTransaction_transaction", "transaction")]
        public transaction transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_paymentActionTransaction_transaction", "transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_paymentActionTransaction_transaction", "transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transaction> transactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("Models.FK_paymentActionTransaction_transaction", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transaction>("Models.FK_paymentActionTransaction_transaction", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="paymentStat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class paymentStat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentStat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static paymentStat CreatepaymentStat(global::System.Int32 id)
        {
            paymentStat paymentStat = new paymentStat();
            paymentStat.ID = id;
            return paymentStat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentAction_paymentStat", "paymentAction")]
        public EntityCollection<paymentAction> paymentAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<paymentAction>("Models.FK_paymentAction_paymentStat", "paymentAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<paymentAction>("Models.FK_paymentAction_paymentStat", "paymentAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="paymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class paymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new paymentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static paymentType CreatepaymentType(global::System.Int32 id)
        {
            paymentType paymentType = new paymentType();
            paymentType.ID = id;
            return paymentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_payment_paymentType", "payment")]
        public EntityCollection<payment> payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<payment>("Models.FK_payment_paymentType", "payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<payment>("Models.FK_payment_paymentType", "payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new permission object.
        /// </summary>
        /// <param name="permission_id">Initial value of the permission_id property.</param>
        public static permission Createpermission(global::System.Int32 permission_id)
        {
            permission permission = new permission();
            permission.permission_id = permission_id;
            return permission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 permission_id
        {
            get
            {
                return _permission_id;
            }
            set
            {
                if (_permission_id != value)
                {
                    Onpermission_idChanging(value);
                    ReportPropertyChanging("permission_id");
                    _permission_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("permission_id");
                    Onpermission_idChanged();
                }
            }
        }
        private global::System.Int32 _permission_id;
        partial void Onpermission_idChanging(global::System.Int32 value);
        partial void Onpermission_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                Onrole_idChanging(value);
                ReportPropertyChanging("role_id");
                _role_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("role_id");
                Onrole_idChanged();
            }
        }
        private Nullable<global::System.Int32> _role_id;
        partial void Onrole_idChanging(Nullable<global::System.Int32> value);
        partial void Onrole_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_permission_lu_role", "lu_role")]
        public lu_role lu_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_permission_lu_role", "lu_role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_permission_lu_role", "lu_role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_role> lu_roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_permission_lu_role", "lu_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_role>("Models.FK_permission_lu_role", "lu_role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_permission_user", "user1")]
        public user1 user1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user1>("Models.FK_permission_user", "user1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user1>("Models.FK_permission_user", "user1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user1> user1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user1>("Models.FK_permission_user", "user1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user1>("Models.FK_permission_user", "user1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new person object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static person Createperson(global::System.Int32 id)
        {
            person person = new person();
            person.ID = id;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                OnfirstNameChanging(value);
                ReportPropertyChanging("firstName");
                _firstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("firstName");
                OnfirstNameChanged();
            }
        }
        private global::System.String _firstName;
        partial void OnfirstNameChanging(global::System.String value);
        partial void OnfirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_person_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_person_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_person_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_person_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_person", "user")]
        public EntityCollection<user> user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("Models.FK_user_person", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("Models.FK_user_person", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="person_org")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person_org : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new person_org object.
        /// </summary>
        /// <param name="person_org_id">Initial value of the person_org_id property.</param>
        public static person_org Createperson_org(global::System.Int32 person_org_id)
        {
            person_org person_org = new person_org();
            person_org.person_org_id = person_org_id;
            return person_org;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 person_org_id
        {
            get
            {
                return _person_org_id;
            }
            set
            {
                if (_person_org_id != value)
                {
                    Onperson_org_idChanging(value);
                    ReportPropertyChanging("person_org_id");
                    _person_org_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("person_org_id");
                    Onperson_org_idChanged();
                }
            }
        }
        private global::System.Int32 _person_org_id;
        partial void Onperson_org_idChanging(global::System.Int32 value);
        partial void Onperson_org_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> person_id
        {
            get
            {
                return _person_id;
            }
            set
            {
                Onperson_idChanging(value);
                ReportPropertyChanging("person_id");
                _person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("person_id");
                Onperson_idChanged();
            }
        }
        private Nullable<global::System.Int32> _person_id;
        partial void Onperson_idChanging(Nullable<global::System.Int32> value);
        partial void Onperson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> org_id
        {
            get
            {
                return _org_id;
            }
            set
            {
                Onorg_idChanging(value);
                ReportPropertyChanging("org_id");
                _org_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("org_id");
                Onorg_idChanged();
            }
        }
        private Nullable<global::System.Int32> _org_id;
        partial void Onorg_idChanging(Nullable<global::System.Int32> value);
        partial void Onorg_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_org_organization", "organization1")]
        public organization1 organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization1>("Models.FK_person_org_organization", "organization1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization1>("Models.FK_person_org_organization", "organization1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization1> organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization1>("Models.FK_person_org_organization", "organization1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organization1>("Models.FK_person_org_organization", "organization1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_org_person", "person1")]
        public person1 person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_person_org_person", "person1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_person_org_person", "person1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person1> person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_person_org_person", "person1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<person1>("Models.FK_person_org_person", "person1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="person1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new person1 object.
        /// </summary>
        /// <param name="person_id">Initial value of the person_id property.</param>
        public static person1 Createperson1(global::System.Int32 person_id)
        {
            person1 person1 = new person1();
            person1.person_id = person_id;
            return person1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 person_id
        {
            get
            {
                return _person_id;
            }
            set
            {
                if (_person_id != value)
                {
                    Onperson_idChanging(value);
                    ReportPropertyChanging("person_id");
                    _person_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("person_id");
                    Onperson_idChanged();
                }
            }
        }
        private global::System.Int32 _person_id;
        partial void Onperson_idChanging(global::System.Int32 value);
        partial void Onperson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fname
        {
            get
            {
                return _fname;
            }
            set
            {
                OnfnameChanging(value);
                ReportPropertyChanging("fname");
                _fname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fname");
                OnfnameChanged();
            }
        }
        private global::System.String _fname;
        partial void OnfnameChanging(global::System.String value);
        partial void OnfnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lname
        {
            get
            {
                return _lname;
            }
            set
            {
                OnlnameChanging(value);
                ReportPropertyChanging("lname");
                _lname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lname");
                OnlnameChanged();
            }
        }
        private global::System.String _lname;
        partial void OnlnameChanging(global::System.String value);
        partial void OnlnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String thumbnailFile
        {
            get
            {
                return _thumbnailFile;
            }
            set
            {
                OnthumbnailFileChanging(value);
                ReportPropertyChanging("thumbnailFile");
                _thumbnailFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("thumbnailFile");
                OnthumbnailFileChanged();
            }
        }
        private global::System.String _thumbnailFile;
        partial void OnthumbnailFileChanging(global::System.String value);
        partial void OnthumbnailFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String thumbnailExt
        {
            get
            {
                return _thumbnailExt;
            }
            set
            {
                OnthumbnailExtChanging(value);
                ReportPropertyChanging("thumbnailExt");
                _thumbnailExt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("thumbnailExt");
                OnthumbnailExtChanged();
            }
        }
        private global::System.String _thumbnailExt;
        partial void OnthumbnailExtChanging(global::System.String value);
        partial void OnthumbnailExtChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_person_org_person", "person_org")]
        public EntityCollection<person_org> person_org
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<person_org>("Models.FK_person_org_person", "person_org");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<person_org>("Models.FK_person_org_person", "person_org", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_user", "task_person")]
        public EntityCollection<task_person> task_person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task_person>("Models.FK_task_user_user", "task_person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task_person>("Models.FK_task_user_user", "task_person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_person1", "user1")]
        public EntityCollection<user1> user1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user1>("Models.FK_user_person1", "user1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user1>("Models.FK_user_person1", "user1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="prca")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class prca : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new prca object.
        /// </summary>
        /// <param name="prca_id">Initial value of the prca_id property.</param>
        public static prca Createprca(global::System.Int32 prca_id)
        {
            prca prca = new prca();
            prca.prca_id = prca_id;
            return prca;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 prca_id
        {
            get
            {
                return _prca_id;
            }
            set
            {
                if (_prca_id != value)
                {
                    Onprca_idChanging(value);
                    ReportPropertyChanging("prca_id");
                    _prca_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("prca_id");
                    Onprca_idChanged();
                }
            }
        }
        private global::System.Int32 _prca_id;
        partial void Onprca_idChanging(global::System.Int32 value);
        partial void Onprca_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> person_id
        {
            get
            {
                return _person_id;
            }
            set
            {
                Onperson_idChanging(value);
                ReportPropertyChanging("person_id");
                _person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("person_id");
                Onperson_idChanged();
            }
        }
        private Nullable<global::System.Int32> _person_id;
        partial void Onperson_idChanging(Nullable<global::System.Int32> value);
        partial void Onperson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rca_id
        {
            get
            {
                return _rca_id;
            }
            set
            {
                Onrca_idChanging(value);
                ReportPropertyChanging("rca_id");
                _rca_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rca_id");
                Onrca_idChanged();
            }
        }
        private Nullable<global::System.Int32> _rca_id;
        partial void Onrca_idChanging(Nullable<global::System.Int32> value);
        partial void Onrca_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_prca_rca", "rca")]
        public rca rca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rca>("Models.FK_prca_rca", "rca").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rca>("Models.FK_prca_rca", "rca").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rca> rcaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rca>("Models.FK_prca_rca", "rca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<rca>("Models.FK_prca_rca", "rca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="rca")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rca : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rca object.
        /// </summary>
        /// <param name="rca_id">Initial value of the rca_id property.</param>
        public static rca Createrca(global::System.Int32 rca_id)
        {
            rca rca = new rca();
            rca.rca_id = rca_id;
            return rca;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rca_id
        {
            get
            {
                return _rca_id;
            }
            set
            {
                if (_rca_id != value)
                {
                    Onrca_idChanging(value);
                    ReportPropertyChanging("rca_id");
                    _rca_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rca_id");
                    Onrca_idChanged();
                }
            }
        }
        private global::System.Int32 _rca_id;
        partial void Onrca_idChanging(global::System.Int32 value);
        partial void Onrca_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                Onrole_idChanging(value);
                ReportPropertyChanging("role_id");
                _role_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("role_id");
                Onrole_idChanged();
            }
        }
        private Nullable<global::System.Int32> _role_id;
        partial void Onrole_idChanging(Nullable<global::System.Int32> value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> component_id
        {
            get
            {
                return _component_id;
            }
            set
            {
                Oncomponent_idChanging(value);
                ReportPropertyChanging("component_id");
                _component_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("component_id");
                Oncomponent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _component_id;
        partial void Oncomponent_idChanging(Nullable<global::System.Int32> value);
        partial void Oncomponent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> acl_id
        {
            get
            {
                return _acl_id;
            }
            set
            {
                Onacl_idChanging(value);
                ReportPropertyChanging("acl_id");
                _acl_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acl_id");
                Onacl_idChanged();
            }
        }
        private Nullable<global::System.Int32> _acl_id;
        partial void Onacl_idChanging(Nullable<global::System.Int32> value);
        partial void Onacl_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_role", "lu_role")]
        public lu_role lu_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_rca_lu_role", "lu_role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_rca_lu_role", "lu_role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_role> lu_roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_role>("Models.FK_rca_lu_role", "lu_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_role>("Models.FK_rca_lu_role", "lu_role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_acl", "lu_acl")]
        public lu_acl lu_acl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_acl>("Models.FK_rca_lu_acl", "lu_acl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_acl>("Models.FK_rca_lu_acl", "lu_acl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_acl> lu_aclReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_acl>("Models.FK_rca_lu_acl", "lu_acl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_acl>("Models.FK_rca_lu_acl", "lu_acl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_rca_lu_component", "lu_component")]
        public lu_component lu_component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_component>("Models.FK_rca_lu_component", "lu_component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_component>("Models.FK_rca_lu_component", "lu_component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_component> lu_componentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_component>("Models.FK_rca_lu_component", "lu_component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_component>("Models.FK_rca_lu_component", "lu_component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_prca_rca", "prca")]
        public EntityCollection<prca> prca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<prca>("Models.FK_prca_rca", "prca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<prca>("Models.FK_prca_rca", "prca", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new resource object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static resource Createresource(global::System.Int32 id)
        {
            resource resource = new resource();
            resource.ID = id;
            return resource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parentID
        {
            get
            {
                return _parentID;
            }
            set
            {
                OnparentIDChanging(value);
                ReportPropertyChanging("parentID");
                _parentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parentID");
                OnparentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _parentID;
        partial void OnparentIDChanging(Nullable<global::System.Int32> value);
        partial void OnparentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resource_resource", "resource1")]
        public EntityCollection<resource> resource1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<resource>("Models.FK_resource_resource", "resource1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<resource>("Models.FK_resource_resource", "resource1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resource_resource", "resource")]
        public resource resource2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resource_resource", "resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resource_resource", "resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<resource> resource2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resource_resource", "resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<resource>("Models.FK_resource_resource", "resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceCategory_resource", "resourceCategory")]
        public EntityCollection<resourceCategory> resourceCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<resourceCategory>("Models.FK_resourceCategory_resource", "resourceCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<resourceCategory>("Models.FK_resourceCategory_resource", "resourceCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceHighlight_resource", "resourceHighlight")]
        public EntityCollection<resourceHighlight> resourceHighlight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<resourceHighlight>("Models.FK_resourceHighlight_resource", "resourceHighlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<resourceHighlight>("Models.FK_resourceHighlight_resource", "resourceHighlight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="resourceCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class resourceCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new resourceCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static resourceCategory CreateresourceCategory(global::System.Int32 id)
        {
            resourceCategory resourceCategory = new resourceCategory();
            resourceCategory.ID = id;
            return resourceCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resourceID
        {
            get
            {
                return _resourceID;
            }
            set
            {
                OnresourceIDChanging(value);
                ReportPropertyChanging("resourceID");
                _resourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("resourceID");
                OnresourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _resourceID;
        partial void OnresourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnresourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> categoryID
        {
            get
            {
                return _categoryID;
            }
            set
            {
                OncategoryIDChanging(value);
                ReportPropertyChanging("categoryID");
                _categoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("categoryID");
                OncategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _categoryID;
        partial void OncategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OncategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceCategory_category", "category")]
        public category category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Models.FK_resourceCategory_category", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Models.FK_resourceCategory_category", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Models.FK_resourceCategory_category", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("Models.FK_resourceCategory_category", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceCategory_resource", "resource")]
        public resource resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceCategory_resource", "resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceCategory_resource", "resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<resource> resourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceCategory_resource", "resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<resource>("Models.FK_resourceCategory_resource", "resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="resourceHighlight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class resourceHighlight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new resourceHighlight object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static resourceHighlight CreateresourceHighlight(global::System.Int32 id)
        {
            resourceHighlight resourceHighlight = new resourceHighlight();
            resourceHighlight.ID = id;
            return resourceHighlight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> resourceID
        {
            get
            {
                return _resourceID;
            }
            set
            {
                OnresourceIDChanging(value);
                ReportPropertyChanging("resourceID");
                _resourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("resourceID");
                OnresourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _resourceID;
        partial void OnresourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnresourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String colorCode
        {
            get
            {
                return _colorCode;
            }
            set
            {
                OncolorCodeChanging(value);
                ReportPropertyChanging("colorCode");
                _colorCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("colorCode");
                OncolorCodeChanged();
            }
        }
        private global::System.String _colorCode;
        partial void OncolorCodeChanging(global::System.String value);
        partial void OncolorCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_resourceHighlight_resource", "resource")]
        public resource resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceHighlight_resource", "resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceHighlight_resource", "resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<resource> resourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<resource>("Models.FK_resourceHighlight_resource", "resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<resource>("Models.FK_resourceHighlight_resource", "resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new service object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static service Createservice(global::System.Int32 id)
        {
            service service = new service();
            service.ID = id;
            return service;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuerEntityID
        {
            get
            {
                return _issuerEntityID;
            }
            set
            {
                OnissuerEntityIDChanging(value);
                ReportPropertyChanging("issuerEntityID");
                _issuerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issuerEntityID");
                OnissuerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _issuerEntityID;
        partial void OnissuerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnissuerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverEntityID
        {
            get
            {
                return _receiverEntityID;
            }
            set
            {
                OnreceiverEntityIDChanging(value);
                ReportPropertyChanging("receiverEntityID");
                _receiverEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverEntityID");
                OnreceiverEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverEntityID;
        partial void OnreceiverEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_service_entitygiver", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entitygiver", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entitygiver", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entitygiver", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_service_entitygiver", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_service_entityreceiver", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entityreceiver", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entityreceiver", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("Models.FK_service_entityreceiver", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("Models.FK_service_entityreceiver", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceService_service", "invoiceService")]
        public EntityCollection<invoiceService> invoiceService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceService>("Models.FK_invoiceService_service", "invoiceService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceService>("Models.FK_invoiceService_service", "invoiceService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="street")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class street : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new street object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static street Createstreet(global::System.Int32 id)
        {
            street street = new street();
            street.ID = id;
            return street;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_address_street", "address")]
        public EntityCollection<address> address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<address>("Models.FK_address_street", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<address>("Models.FK_address_street", "address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="sysUserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysUserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysUserType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static sysUserType CreatesysUserType(global::System.Int32 id)
        {
            sysUserType sysUserType = new sysUserType();
            sysUserType.ID = id;
            return sysUserType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new task object.
        /// </summary>
        /// <param name="task_id">Initial value of the task_id property.</param>
        public static task Createtask(global::System.Int32 task_id)
        {
            task task = new task();
            task.task_id = task_id;
            return task;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 task_id
        {
            get
            {
                return _task_id;
            }
            set
            {
                if (_task_id != value)
                {
                    Ontask_idChanging(value);
                    ReportPropertyChanging("task_id");
                    _task_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("task_id");
                    Ontask_idChanged();
                }
            }
        }
        private global::System.Int32 _task_id;
        partial void Ontask_idChanging(global::System.Int32 value);
        partial void Ontask_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> deadline
        {
            get
            {
                return _deadline;
            }
            set
            {
                OndeadlineChanging(value);
                ReportPropertyChanging("deadline");
                _deadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deadline");
                OndeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _deadline;
        partial void OndeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OndeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> task_status_id
        {
            get
            {
                return _task_status_id;
            }
            set
            {
                Ontask_status_idChanging(value);
                ReportPropertyChanging("task_status_id");
                _task_status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("task_status_id");
                Ontask_status_idChanged();
            }
        }
        private Nullable<global::System.Int32> _task_status_id;
        partial void Ontask_status_idChanging(Nullable<global::System.Int32> value);
        partial void Ontask_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> stamp
        {
            get
            {
                return _stamp;
            }
            set
            {
                OnstampChanging(value);
                ReportPropertyChanging("stamp");
                _stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stamp");
                OnstampChanged();
            }
        }
        private Nullable<global::System.DateTime> _stamp;
        partial void OnstampChanging(Nullable<global::System.DateTime> value);
        partial void OnstampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_lu_task_status", "lu_task_status")]
        public lu_task_status lu_task_status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_lu_task_status", "lu_task_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_lu_task_status", "lu_task_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_task_status> lu_task_statusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_lu_task_status", "lu_task_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_task_status>("Models.FK_task_lu_task_status", "lu_task_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_task", "task_person")]
        public EntityCollection<task_person> task_person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task_person>("Models.FK_task_user_task", "task_person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task_person>("Models.FK_task_user_task", "task_person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="task_person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class task_person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new task_person object.
        /// </summary>
        /// <param name="task_person_id">Initial value of the task_person_id property.</param>
        public static task_person Createtask_person(global::System.Int32 task_person_id)
        {
            task_person task_person = new task_person();
            task_person.task_person_id = task_person_id;
            return task_person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 task_person_id
        {
            get
            {
                return _task_person_id;
            }
            set
            {
                if (_task_person_id != value)
                {
                    Ontask_person_idChanging(value);
                    ReportPropertyChanging("task_person_id");
                    _task_person_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("task_person_id");
                    Ontask_person_idChanged();
                }
            }
        }
        private global::System.Int32 _task_person_id;
        partial void Ontask_person_idChanging(global::System.Int32 value);
        partial void Ontask_person_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> task_id
        {
            get
            {
                return _task_id;
            }
            set
            {
                Ontask_idChanging(value);
                ReportPropertyChanging("task_id");
                _task_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("task_id");
                Ontask_idChanged();
            }
        }
        private Nullable<global::System.Int32> _task_id;
        partial void Ontask_idChanging(Nullable<global::System.Int32> value);
        partial void Ontask_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> person_id
        {
            get
            {
                return _person_id;
            }
            set
            {
                Onperson_idChanging(value);
                ReportPropertyChanging("person_id");
                _person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("person_id");
                Onperson_idChanged();
            }
        }
        private Nullable<global::System.Int32> _person_id;
        partial void Onperson_idChanging(Nullable<global::System.Int32> value);
        partial void Onperson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> eta
        {
            get
            {
                return _eta;
            }
            set
            {
                OnetaChanging(value);
                ReportPropertyChanging("eta");
                _eta = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eta");
                OnetaChanged();
            }
        }
        private Nullable<global::System.Double> _eta;
        partial void OnetaChanging(Nullable<global::System.Double> value);
        partial void OnetaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_task_status_id
        {
            get
            {
                return _user_task_status_id;
            }
            set
            {
                Onuser_task_status_idChanging(value);
                ReportPropertyChanging("user_task_status_id");
                _user_task_status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_task_status_id");
                Onuser_task_status_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_task_status_id;
        partial void Onuser_task_status_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_task_status_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_user", "person1")]
        public person1 person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_task_user_user", "person1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_task_user_user", "person1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person1> person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_task_user_user", "person1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<person1>("Models.FK_task_user_user", "person1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_person_lu_task_status", "lu_task_status")]
        public lu_task_status lu_task_status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_person_lu_task_status", "lu_task_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_person_lu_task_status", "lu_task_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_task_status> lu_task_statusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_task_status>("Models.FK_task_person_lu_task_status", "lu_task_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_task_status>("Models.FK_task_person_lu_task_status", "lu_task_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_task", "task")]
        public task task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("Models.FK_task_user_task", "task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("Models.FK_task_user_task", "task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<task> taskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("Models.FK_task_user_task", "task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<task>("Models.FK_task_user_task", "task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_progress_task_user", "tp_progress")]
        public EntityCollection<tp_progress> tp_progress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tp_progress>("Models.FK_task_user_progress_task_user", "tp_progress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tp_progress>("Models.FK_task_user_progress_task_user", "tp_progress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_tp_timers_task_person", "tp_timer")]
        public EntityCollection<tp_timer> tp_timer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tp_timer>("Models.FK_tp_timers_task_person", "tp_timer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tp_timer>("Models.FK_tp_timers_task_person", "tp_timer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="test")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class test : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new test object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static test Createtest(global::System.Int32 id)
        {
            test test = new test();
            test.id = id;
            return test;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_testreview_test", "testreview")]
        public EntityCollection<testreview> testreview
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<testreview>("Models.FK_testreview_test", "testreview");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<testreview>("Models.FK_testreview_test", "testreview", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="testreview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class testreview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new testreview object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static testreview Createtestreview(global::System.Int32 id)
        {
            testreview testreview = new testreview();
            testreview.id = id;
            return testreview;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> testid
        {
            get
            {
                return _testid;
            }
            set
            {
                OntestidChanging(value);
                ReportPropertyChanging("testid");
                _testid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("testid");
                OntestidChanged();
            }
        }
        private Nullable<global::System.Int32> _testid;
        partial void OntestidChanging(Nullable<global::System.Int32> value);
        partial void OntestidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rate
        {
            get
            {
                return _rate;
            }
            set
            {
                OnrateChanging(value);
                ReportPropertyChanging("rate");
                _rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rate");
                OnrateChanged();
            }
        }
        private Nullable<global::System.Int32> _rate;
        partial void OnrateChanging(Nullable<global::System.Int32> value);
        partial void OnrateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_testreview_test", "test")]
        public test test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test>("Models.FK_testreview_test", "test").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test>("Models.FK_testreview_test", "test").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<test> testReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<test>("Models.FK_testreview_test", "test");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<test>("Models.FK_testreview_test", "test", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new topic object.
        /// </summary>
        /// <param name="topic_id">Initial value of the topic_id property.</param>
        public static topic Createtopic(global::System.Int32 topic_id)
        {
            topic topic = new topic();
            topic.topic_id = topic_id;
            return topic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 topic_id
        {
            get
            {
                return _topic_id;
            }
            set
            {
                if (_topic_id != value)
                {
                    Ontopic_idChanging(value);
                    ReportPropertyChanging("topic_id");
                    _topic_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("topic_id");
                    Ontopic_idChanged();
                }
            }
        }
        private global::System.Int32 _topic_id;
        partial void Ontopic_idChanging(global::System.Int32 value);
        partial void Ontopic_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> topic_parent_id
        {
            get
            {
                return _topic_parent_id;
            }
            set
            {
                Ontopic_parent_idChanging(value);
                ReportPropertyChanging("topic_parent_id");
                _topic_parent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("topic_parent_id");
                Ontopic_parent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _topic_parent_id;
        partial void Ontopic_parent_idChanging(Nullable<global::System.Int32> value);
        partial void Ontopic_parent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String topic_title
        {
            get
            {
                return _topic_title;
            }
            set
            {
                Ontopic_titleChanging(value);
                ReportPropertyChanging("topic_title");
                _topic_title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("topic_title");
                Ontopic_titleChanged();
            }
        }
        private global::System.String _topic_title;
        partial void Ontopic_titleChanging(global::System.String value);
        partial void Ontopic_titleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String topic_details
        {
            get
            {
                return _topic_details;
            }
            set
            {
                Ontopic_detailsChanging(value);
                ReportPropertyChanging("topic_details");
                _topic_details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("topic_details");
                Ontopic_detailsChanged();
            }
        }
        private global::System.String _topic_details;
        partial void Ontopic_detailsChanging(global::System.String value);
        partial void Ontopic_detailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String datetime
        {
            get
            {
                return _datetime;
            }
            set
            {
                OndatetimeChanging(value);
                ReportPropertyChanging("datetime");
                _datetime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("datetime");
                OndatetimeChanged();
            }
        }
        private global::System.String _datetime;
        partial void OndatetimeChanging(global::System.String value);
        partial void OndatetimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="topics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class topics : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new topics object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static topics Createtopics(global::System.Int32 id)
        {
            topics topics = new topics();
            topics.id = id;
            return topics;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_id;
        partial void Onparent_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String datetime
        {
            get
            {
                return _datetime;
            }
            set
            {
                OndatetimeChanging(value);
                ReportPropertyChanging("datetime");
                _datetime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("datetime");
                OndatetimeChanged();
            }
        }
        private global::System.String _datetime;
        partial void OndatetimeChanging(global::System.String value);
        partial void OndatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> foldering_id
        {
            get
            {
                return _foldering_id;
            }
            set
            {
                Onfoldering_idChanging(value);
                ReportPropertyChanging("foldering_id");
                _foldering_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("foldering_id");
                Onfoldering_idChanged();
            }
        }
        private Nullable<global::System.Int32> _foldering_id;
        partial void Onfoldering_idChanging(Nullable<global::System.Int32> value);
        partial void Onfoldering_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_topic_foldering", "foldering")]
        public foldering foldering
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<foldering>("Models.FK_topic_foldering", "foldering").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<foldering>("Models.FK_topic_foldering", "foldering").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<foldering> folderingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<foldering>("Models.FK_topic_foldering", "foldering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<foldering>("Models.FK_topic_foldering", "foldering", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="tp_progress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tp_progress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tp_progress object.
        /// </summary>
        /// <param name="t_p_p_id">Initial value of the t_p_p_id property.</param>
        public static tp_progress Createtp_progress(global::System.Int32 t_p_p_id)
        {
            tp_progress tp_progress = new tp_progress();
            tp_progress.t_p_p_id = t_p_p_id;
            return tp_progress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 t_p_p_id
        {
            get
            {
                return _t_p_p_id;
            }
            set
            {
                if (_t_p_p_id != value)
                {
                    Ont_p_p_idChanging(value);
                    ReportPropertyChanging("t_p_p_id");
                    _t_p_p_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("t_p_p_id");
                    Ont_p_p_idChanged();
                }
            }
        }
        private global::System.Int32 _t_p_p_id;
        partial void Ont_p_p_idChanging(global::System.Int32 value);
        partial void Ont_p_p_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> t_p_id
        {
            get
            {
                return _t_p_id;
            }
            set
            {
                Ont_p_idChanging(value);
                ReportPropertyChanging("t_p_id");
                _t_p_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("t_p_id");
                Ont_p_idChanged();
            }
        }
        private Nullable<global::System.Int32> _t_p_id;
        partial void Ont_p_idChanging(Nullable<global::System.Int32> value);
        partial void Ont_p_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> datetime
        {
            get
            {
                return _datetime;
            }
            set
            {
                OndatetimeChanging(value);
                ReportPropertyChanging("datetime");
                _datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("datetime");
                OndatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _datetime;
        partial void OndatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OndatetimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_task_user_progress_task_user", "task_person")]
        public task_person task_person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_task_user_progress_task_user", "task_person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_task_user_progress_task_user", "task_person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<task_person> task_personReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_task_user_progress_task_user", "task_person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<task_person>("Models.FK_task_user_progress_task_user", "task_person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="tp_timer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tp_timer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tp_timer object.
        /// </summary>
        /// <param name="t_p_t_id">Initial value of the t_p_t_id property.</param>
        public static tp_timer Createtp_timer(global::System.Int32 t_p_t_id)
        {
            tp_timer tp_timer = new tp_timer();
            tp_timer.t_p_t_id = t_p_t_id;
            return tp_timer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 t_p_t_id
        {
            get
            {
                return _t_p_t_id;
            }
            set
            {
                if (_t_p_t_id != value)
                {
                    Ont_p_t_idChanging(value);
                    ReportPropertyChanging("t_p_t_id");
                    _t_p_t_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("t_p_t_id");
                    Ont_p_t_idChanged();
                }
            }
        }
        private global::System.Int32 _t_p_t_id;
        partial void Ont_p_t_idChanging(global::System.Int32 value);
        partial void Ont_p_t_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> t_p_id
        {
            get
            {
                return _t_p_id;
            }
            set
            {
                Ont_p_idChanging(value);
                ReportPropertyChanging("t_p_id");
                _t_p_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("t_p_id");
                Ont_p_idChanged();
            }
        }
        private Nullable<global::System.Int32> _t_p_id;
        partial void Ont_p_idChanging(Nullable<global::System.Int32> value);
        partial void Ont_p_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> start_stamp
        {
            get
            {
                return _start_stamp;
            }
            set
            {
                Onstart_stampChanging(value);
                ReportPropertyChanging("start_stamp");
                _start_stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("start_stamp");
                Onstart_stampChanged();
            }
        }
        private Nullable<global::System.DateTime> _start_stamp;
        partial void Onstart_stampChanging(Nullable<global::System.DateTime> value);
        partial void Onstart_stampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_stamp
        {
            get
            {
                return _end_stamp;
            }
            set
            {
                Onend_stampChanging(value);
                ReportPropertyChanging("end_stamp");
                _end_stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_stamp");
                Onend_stampChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_stamp;
        partial void Onend_stampChanging(Nullable<global::System.DateTime> value);
        partial void Onend_stampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_commited
        {
            get
            {
                return _is_commited;
            }
            set
            {
                Onis_commitedChanging(value);
                ReportPropertyChanging("is_commited");
                _is_commited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_commited");
                Onis_commitedChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_commited;
        partial void Onis_commitedChanging(Nullable<global::System.Boolean> value);
        partial void Onis_commitedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_tp_timers_task_person", "task_person")]
        public task_person task_person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_tp_timers_task_person", "task_person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_tp_timers_task_person", "task_person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<task_person> task_personReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task_person>("Models.FK_tp_timers_task_person", "task_person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<task_person>("Models.FK_tp_timers_task_person", "task_person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static transaction Createtransaction(global::System.Int32 id)
        {
            transaction transaction = new transaction();
            transaction.ID = id;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> accountID
        {
            get
            {
                return _accountID;
            }
            set
            {
                OnaccountIDChanging(value);
                ReportPropertyChanging("accountID");
                _accountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accountID");
                OnaccountIDChanged();
            }
        }
        private Nullable<global::System.Int32> _accountID;
        partial void OnaccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnaccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_transaction_account", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("Models.FK_transaction_account", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("Models.FK_transaction_account", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("Models.FK_transaction_account", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("Models.FK_transaction_account", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_entityWalletTransaction_transaction", "entityWalletTransaction")]
        public EntityCollection<entityWalletTransaction> entityWalletTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityWalletTransaction>("Models.FK_entityWalletTransaction_transaction", "entityWalletTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityWalletTransaction>("Models.FK_entityWalletTransaction_transaction", "entityWalletTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_invoiceActionTransaction_transaction", "invoiceActionTransaction")]
        public EntityCollection<invoiceActionTransaction> invoiceActionTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceActionTransaction>("Models.FK_invoiceActionTransaction_transaction", "invoiceActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceActionTransaction>("Models.FK_invoiceActionTransaction_transaction", "invoiceActionTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_paymentActionTransaction_transaction", "paymentActionTransaction")]
        public EntityCollection<paymentActionTransaction> paymentActionTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<paymentActionTransaction>("Models.FK_paymentActionTransaction_transaction", "paymentActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<paymentActionTransaction>("Models.FK_paymentActionTransaction_transaction", "paymentActionTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="transactionAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transactionAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transactionAccount object.
        /// </summary>
        /// <param name="transactionID">Initial value of the transactionID property.</param>
        /// <param name="accountID">Initial value of the accountID property.</param>
        /// <param name="balance">Initial value of the balance property.</param>
        public static transactionAccount CreatetransactionAccount(global::System.Int32 transactionID, global::System.Int32 accountID, global::System.Decimal balance)
        {
            transactionAccount transactionAccount = new transactionAccount();
            transactionAccount.transactionID = transactionID;
            transactionAccount.accountID = accountID;
            transactionAccount.balance = balance;
            return transactionAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                if (_transactionID != value)
                {
                    OntransactionIDChanging(value);
                    ReportPropertyChanging("transactionID");
                    _transactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("transactionID");
                    OntransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _transactionID;
        partial void OntransactionIDChanging(global::System.Int32 value);
        partial void OntransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 accountID
        {
            get
            {
                return _accountID;
            }
            set
            {
                if (_accountID != value)
                {
                    OnaccountIDChanging(value);
                    ReportPropertyChanging("accountID");
                    _accountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("accountID");
                    OnaccountIDChanged();
                }
            }
        }
        private global::System.Int32 _accountID;
        partial void OnaccountIDChanging(global::System.Int32 value);
        partial void OnaccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ownerEntityID
        {
            get
            {
                return _ownerEntityID;
            }
            set
            {
                OnownerEntityIDChanging(value);
                ReportPropertyChanging("ownerEntityID");
                _ownerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ownerEntityID");
                OnownerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ownerEntityID;
        partial void OnownerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnownerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GL
        {
            get
            {
                return _GL;
            }
            set
            {
                OnGLChanging(value);
                ReportPropertyChanging("GL");
                _GL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GL");
                OnGLChanged();
            }
        }
        private global::System.String _GL;
        partial void OnGLChanging(global::System.String value);
        partial void OnGLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal balance
        {
            get
            {
                return _balance;
            }
            set
            {
                if (_balance != value)
                {
                    OnbalanceChanging(value);
                    ReportPropertyChanging("balance");
                    _balance = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("balance");
                    OnbalanceChanged();
                }
            }
        }
        private global::System.Decimal _balance;
        partial void OnbalanceChanging(global::System.Decimal value);
        partial void OnbalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static user Createuser(global::System.Int32 id)
        {
            user user = new user();
            user.ID = id;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userTypeID
        {
            get
            {
                return _userTypeID;
            }
            set
            {
                OnuserTypeIDChanging(value);
                ReportPropertyChanging("userTypeID");
                _userTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userTypeID");
                OnuserTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userTypeID;
        partial void OnuserTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> personID
        {
            get
            {
                return _personID;
            }
            set
            {
                OnpersonIDChanging(value);
                ReportPropertyChanging("personID");
                _personID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("personID");
                OnpersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _personID;
        partial void OnpersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnpersonIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_person", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("Models.FK_user_person", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("Models.FK_user_person", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("Models.FK_user_person", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<person>("Models.FK_user_person", "person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_userType", "userType")]
        public userType userType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("Models.FK_user_userType", "userType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("Models.FK_user_userType", "userType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<userType> userTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<userType>("Models.FK_user_userType", "userType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<userType>("Models.FK_user_userType", "userType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="user1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user1 object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static user1 Createuser1(global::System.Int32 user_id)
        {
            user1 user1 = new user1();
            user1.user_id = user_id;
            return user1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> person_id
        {
            get
            {
                return _person_id;
            }
            set
            {
                Onperson_idChanging(value);
                ReportPropertyChanging("person_id");
                _person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("person_id");
                Onperson_idChanged();
            }
        }
        private Nullable<global::System.Int32> _person_id;
        partial void Onperson_idChanging(Nullable<global::System.Int32> value);
        partial void Onperson_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_permission_user", "permission")]
        public EntityCollection<permission> permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<permission>("Models.FK_permission_user", "permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<permission>("Models.FK_permission_user", "permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_person1", "person1")]
        public person1 person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_user_person1", "person1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_user_person1", "person1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person1> person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person1>("Models.FK_user_person1", "person1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<person1>("Models.FK_user_person1", "person1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="userType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class userType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new userType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static userType CreateuserType(global::System.Int32 id)
        {
            userType userType = new userType();
            userType.ID = id;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_user_userType", "user")]
        public EntityCollection<user> user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("Models.FK_user_userType", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("Models.FK_user_userType", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Models", Name="visaCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class visaCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new visaCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static visaCard CreatevisaCard(global::System.Int32 id)
        {
            visaCard visaCard = new visaCard();
            visaCard.ID = id;
            return visaCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardID
        {
            get
            {
                return _ccCardID;
            }
            set
            {
                OnccCardIDChanging(value);
                ReportPropertyChanging("ccCardID");
                _ccCardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardID");
                OnccCardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardID;
        partial void OnccCardIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Models", "FK_visaCard_ccCard", "ccCard")]
        public ccCard ccCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_visaCard_ccCard", "ccCard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_visaCard_ccCard", "ccCard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ccCard> ccCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ccCard>("Models.FK_visaCard_ccCard", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ccCard>("Models.FK_visaCard_ccCard", "ccCard", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
