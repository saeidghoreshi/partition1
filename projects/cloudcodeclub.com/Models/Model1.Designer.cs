//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("db1Model", "FK_review_movie", "movie", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MvcApplication1.Models.movie), "review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication1.Models.review), true)]

#endregion

namespace MvcApplication1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class db1Entities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new db1Entities1 object using the connection string found in the 'db1Entities1' section of the application configuration file.
        /// </summary>
        public db1Entities1() : base("name=db1Entities1", "db1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new db1Entities1 object.
        /// </summary>
        public db1Entities1(string connectionString) : base(connectionString, "db1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new db1Entities1 object.
        /// </summary>
        public db1Entities1(EntityConnection connection) : base(connection, "db1Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<movie> movies
        {
            get
            {
                if ((_movies == null))
                {
                    _movies = base.CreateObjectSet<movie>("movies");
                }
                return _movies;
            }
        }
        private ObjectSet<movie> _movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<review> reviews
        {
            get
            {
                if ((_reviews == null))
                {
                    _reviews = base.CreateObjectSet<review>("reviews");
                }
                return _reviews;
            }
        }
        private ObjectSet<review> _reviews;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomovies(movie movie)
        {
            base.AddObject("movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToreviews(review review)
        {
            base.AddObject("reviews", review);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int getAllMovies()
        {
            return base.ExecuteFunction("getAllMovies");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db1Model", Name="movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new movie object.
        /// </summary>
        /// <param name="movie_id">Initial value of the movie_id property.</param>
        public static movie Createmovie(global::System.Int32 movie_id)
        {
            movie movie = new movie();
            movie.movie_id = movie_id;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                if (_movie_id != value)
                {
                    Onmovie_idChanging(value);
                    ReportPropertyChanging("movie_id");
                    _movie_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("movie_id");
                    Onmovie_idChanged();
                }
            }
        }
        private global::System.Int32 _movie_id;
        partial void Onmovie_idChanging(global::System.Int32 value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String movie_name
        {
            get
            {
                return _movie_name;
            }
            set
            {
                Onmovie_nameChanging(value);
                ReportPropertyChanging("movie_name");
                _movie_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("movie_name");
                Onmovie_nameChanged();
            }
        }
        private global::System.String _movie_name;
        partial void Onmovie_nameChanging(global::System.String value);
        partial void Onmovie_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db1Model", "FK_review_movie", "review")]
        public EntityCollection<review> reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<review>("db1Model.FK_review_movie", "review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<review>("db1Model.FK_review_movie", "review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db1Model", Name="review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new review object.
        /// </summary>
        /// <param name="review_id">Initial value of the review_id property.</param>
        public static review Createreview(global::System.Int32 review_id)
        {
            review review = new review();
            review.review_id = review_id;
            return review;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 review_id
        {
            get
            {
                return _review_id;
            }
            set
            {
                if (_review_id != value)
                {
                    Onreview_idChanging(value);
                    ReportPropertyChanging("review_id");
                    _review_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("review_id");
                    Onreview_idChanged();
                }
            }
        }
        private global::System.Int32 _review_id;
        partial void Onreview_idChanging(global::System.Int32 value);
        partial void Onreview_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movie_id
        {
            get
            {
                return _movie_id;
            }
            set
            {
                Onmovie_idChanging(value);
                ReportPropertyChanging("movie_id");
                _movie_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movie_id");
                Onmovie_idChanged();
            }
        }
        private Nullable<global::System.Int32> _movie_id;
        partial void Onmovie_idChanging(Nullable<global::System.Int32> value);
        partial void Onmovie_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rating
        {
            get
            {
                return _rating;
            }
            set
            {
                OnratingChanging(value);
                ReportPropertyChanging("rating");
                _rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rating");
                OnratingChanged();
            }
        }
        private Nullable<global::System.Int32> _rating;
        partial void OnratingChanging(Nullable<global::System.Int32> value);
        partial void OnratingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db1Model", "FK_review_movie", "movie")]
        public movie movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<movie>("db1Model.FK_review_movie", "movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<movie>("db1Model.FK_review_movie", "movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<movie> movieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<movie>("db1Model.FK_review_movie", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<movie>("db1Model.FK_review_movie", "movie", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
