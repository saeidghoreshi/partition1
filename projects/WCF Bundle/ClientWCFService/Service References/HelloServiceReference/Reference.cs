//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWCFService.HelloServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="spec", Namespace="http://test.com/Interface1/spec")]
    [System.SerializableAttribute()]
    public partial class spec : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bambooField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xaddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bamboo {
            get {
                return this.bambooField;
            }
            set {
                if ((object.ReferenceEquals(this.bambooField, value) != true)) {
                    this.bambooField = value;
                    this.RaisePropertyChanged("bamboo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal {
            get {
                return this.postalField;
            }
            set {
                if ((object.ReferenceEquals(this.postalField, value) != true)) {
                    this.postalField = value;
                    this.RaisePropertyChanged("postal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xaddress {
            get {
                return this.xaddressField;
            }
            set {
                if ((object.ReferenceEquals(this.xaddressField, value) != true)) {
                    this.xaddressField = value;
                    this.RaisePropertyChanged("xaddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HelloServiceReference.IHello")]
    public interface IHello {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHello/addSpec")]
        void addSpec(ClientWCFService.HelloServiceReference.spec spec);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHello/addSpec")]
        System.IAsyncResult BeginaddSpec(ClientWCFService.HelloServiceReference.spec spec, System.AsyncCallback callback, object asyncState);
        
        void EndaddSpec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHello/getSpecs", ReplyAction="http://tempuri.org/IHello/getSpecsResponse")]
        ClientWCFService.HelloServiceReference.spec[] getSpecs();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHello/getSpecs", ReplyAction="http://tempuri.org/IHello/getSpecsResponse")]
        System.IAsyncResult BegingetSpecs(System.AsyncCallback callback, object asyncState);
        
        ClientWCFService.HelloServiceReference.spec[] EndgetSpecs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHello/getSpecByName", ReplyAction="http://tempuri.org/IHello/getSpecByNameResponse")]
        ClientWCFService.HelloServiceReference.spec getSpecByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHello/getSpecByName", ReplyAction="http://tempuri.org/IHello/getSpecByNameResponse")]
        System.IAsyncResult BegingetSpecByName(string name, System.AsyncCallback callback, object asyncState);
        
        ClientWCFService.HelloServiceReference.spec EndgetSpecByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHello/deleteSpec")]
        void deleteSpec(string id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHello/deleteSpec")]
        System.IAsyncResult BegindeleteSpec(string id, System.AsyncCallback callback, object asyncState);
        
        void EnddeleteSpec(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHello/GetFeed", ReplyAction="http://tempuri.org/IHello/GetFeedResponse")]
        System.ServiceModel.Syndication.SyndicationFeedFormatter GetFeed(string format);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHello/GetFeed", ReplyAction="http://tempuri.org/IHello/GetFeedResponse")]
        System.IAsyncResult BeginGetFeed(string format, System.AsyncCallback callback, object asyncState);
        
        System.ServiceModel.Syndication.SyndicationFeedFormatter EndGetFeed(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelloChannel : ClientWCFService.HelloServiceReference.IHello, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSpecsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSpecsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClientWCFService.HelloServiceReference.spec[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClientWCFService.HelloServiceReference.spec[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSpecByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSpecByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClientWCFService.HelloServiceReference.spec Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClientWCFService.HelloServiceReference.spec)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.ServiceModel.Syndication.SyndicationFeedFormatter Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.ServiceModel.Syndication.SyndicationFeedFormatter)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloClient : System.ServiceModel.ClientBase<ClientWCFService.HelloServiceReference.IHello>, ClientWCFService.HelloServiceReference.IHello {
        
        private BeginOperationDelegate onBeginaddSpecDelegate;
        
        private EndOperationDelegate onEndaddSpecDelegate;
        
        private System.Threading.SendOrPostCallback onaddSpecCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSpecsDelegate;
        
        private EndOperationDelegate onEndgetSpecsDelegate;
        
        private System.Threading.SendOrPostCallback ongetSpecsCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSpecByNameDelegate;
        
        private EndOperationDelegate onEndgetSpecByNameDelegate;
        
        private System.Threading.SendOrPostCallback ongetSpecByNameCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteSpecDelegate;
        
        private EndOperationDelegate onEnddeleteSpecDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteSpecCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFeedDelegate;
        
        private EndOperationDelegate onEndGetFeedDelegate;
        
        private System.Threading.SendOrPostCallback onGetFeedCompletedDelegate;
        
        public HelloClient() {
        }
        
        public HelloClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addSpecCompleted;
        
        public event System.EventHandler<getSpecsCompletedEventArgs> getSpecsCompleted;
        
        public event System.EventHandler<getSpecByNameCompletedEventArgs> getSpecByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> deleteSpecCompleted;
        
        public event System.EventHandler<GetFeedCompletedEventArgs> GetFeedCompleted;
        
        public void addSpec(ClientWCFService.HelloServiceReference.spec spec) {
            base.Channel.addSpec(spec);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddSpec(ClientWCFService.HelloServiceReference.spec spec, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddSpec(spec, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddSpec(System.IAsyncResult result) {
            base.Channel.EndaddSpec(result);
        }
        
        private System.IAsyncResult OnBeginaddSpec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ClientWCFService.HelloServiceReference.spec spec = ((ClientWCFService.HelloServiceReference.spec)(inValues[0]));
            return this.BeginaddSpec(spec, callback, asyncState);
        }
        
        private object[] OnEndaddSpec(System.IAsyncResult result) {
            this.EndaddSpec(result);
            return null;
        }
        
        private void OnaddSpecCompleted(object state) {
            if ((this.addSpecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addSpecCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addSpecAsync(ClientWCFService.HelloServiceReference.spec spec) {
            this.addSpecAsync(spec, null);
        }
        
        public void addSpecAsync(ClientWCFService.HelloServiceReference.spec spec, object userState) {
            if ((this.onBeginaddSpecDelegate == null)) {
                this.onBeginaddSpecDelegate = new BeginOperationDelegate(this.OnBeginaddSpec);
            }
            if ((this.onEndaddSpecDelegate == null)) {
                this.onEndaddSpecDelegate = new EndOperationDelegate(this.OnEndaddSpec);
            }
            if ((this.onaddSpecCompletedDelegate == null)) {
                this.onaddSpecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddSpecCompleted);
            }
            base.InvokeAsync(this.onBeginaddSpecDelegate, new object[] {
                        spec}, this.onEndaddSpecDelegate, this.onaddSpecCompletedDelegate, userState);
        }
        
        public ClientWCFService.HelloServiceReference.spec[] getSpecs() {
            return base.Channel.getSpecs();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetSpecs(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSpecs(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ClientWCFService.HelloServiceReference.spec[] EndgetSpecs(System.IAsyncResult result) {
            return base.Channel.EndgetSpecs(result);
        }
        
        private System.IAsyncResult OnBegingetSpecs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetSpecs(callback, asyncState);
        }
        
        private object[] OnEndgetSpecs(System.IAsyncResult result) {
            ClientWCFService.HelloServiceReference.spec[] retVal = this.EndgetSpecs(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSpecsCompleted(object state) {
            if ((this.getSpecsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSpecsCompleted(this, new getSpecsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSpecsAsync() {
            this.getSpecsAsync(null);
        }
        
        public void getSpecsAsync(object userState) {
            if ((this.onBegingetSpecsDelegate == null)) {
                this.onBegingetSpecsDelegate = new BeginOperationDelegate(this.OnBegingetSpecs);
            }
            if ((this.onEndgetSpecsDelegate == null)) {
                this.onEndgetSpecsDelegate = new EndOperationDelegate(this.OnEndgetSpecs);
            }
            if ((this.ongetSpecsCompletedDelegate == null)) {
                this.ongetSpecsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSpecsCompleted);
            }
            base.InvokeAsync(this.onBegingetSpecsDelegate, null, this.onEndgetSpecsDelegate, this.ongetSpecsCompletedDelegate, userState);
        }
        
        public ClientWCFService.HelloServiceReference.spec getSpecByName(string name) {
            return base.Channel.getSpecByName(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetSpecByName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSpecByName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ClientWCFService.HelloServiceReference.spec EndgetSpecByName(System.IAsyncResult result) {
            return base.Channel.EndgetSpecByName(result);
        }
        
        private System.IAsyncResult OnBegingetSpecByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return this.BegingetSpecByName(name, callback, asyncState);
        }
        
        private object[] OnEndgetSpecByName(System.IAsyncResult result) {
            ClientWCFService.HelloServiceReference.spec retVal = this.EndgetSpecByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSpecByNameCompleted(object state) {
            if ((this.getSpecByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSpecByNameCompleted(this, new getSpecByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSpecByNameAsync(string name) {
            this.getSpecByNameAsync(name, null);
        }
        
        public void getSpecByNameAsync(string name, object userState) {
            if ((this.onBegingetSpecByNameDelegate == null)) {
                this.onBegingetSpecByNameDelegate = new BeginOperationDelegate(this.OnBegingetSpecByName);
            }
            if ((this.onEndgetSpecByNameDelegate == null)) {
                this.onEndgetSpecByNameDelegate = new EndOperationDelegate(this.OnEndgetSpecByName);
            }
            if ((this.ongetSpecByNameCompletedDelegate == null)) {
                this.ongetSpecByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSpecByNameCompleted);
            }
            base.InvokeAsync(this.onBegingetSpecByNameDelegate, new object[] {
                        name}, this.onEndgetSpecByNameDelegate, this.ongetSpecByNameCompletedDelegate, userState);
        }
        
        public void deleteSpec(string id) {
            base.Channel.deleteSpec(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteSpec(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteSpec(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EnddeleteSpec(System.IAsyncResult result) {
            base.Channel.EnddeleteSpec(result);
        }
        
        private System.IAsyncResult OnBegindeleteSpec(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BegindeleteSpec(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteSpec(System.IAsyncResult result) {
            this.EnddeleteSpec(result);
            return null;
        }
        
        private void OndeleteSpecCompleted(object state) {
            if ((this.deleteSpecCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteSpecCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteSpecAsync(string id) {
            this.deleteSpecAsync(id, null);
        }
        
        public void deleteSpecAsync(string id, object userState) {
            if ((this.onBegindeleteSpecDelegate == null)) {
                this.onBegindeleteSpecDelegate = new BeginOperationDelegate(this.OnBegindeleteSpec);
            }
            if ((this.onEnddeleteSpecDelegate == null)) {
                this.onEnddeleteSpecDelegate = new EndOperationDelegate(this.OnEnddeleteSpec);
            }
            if ((this.ondeleteSpecCompletedDelegate == null)) {
                this.ondeleteSpecCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteSpecCompleted);
            }
            base.InvokeAsync(this.onBegindeleteSpecDelegate, new object[] {
                        id}, this.onEnddeleteSpecDelegate, this.ondeleteSpecCompletedDelegate, userState);
        }
        
        public System.ServiceModel.Syndication.SyndicationFeedFormatter GetFeed(string format) {
            return base.Channel.GetFeed(format);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFeed(string format, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFeed(format, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.ServiceModel.Syndication.SyndicationFeedFormatter EndGetFeed(System.IAsyncResult result) {
            return base.Channel.EndGetFeed(result);
        }
        
        private System.IAsyncResult OnBeginGetFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string format = ((string)(inValues[0]));
            return this.BeginGetFeed(format, callback, asyncState);
        }
        
        private object[] OnEndGetFeed(System.IAsyncResult result) {
            System.ServiceModel.Syndication.SyndicationFeedFormatter retVal = this.EndGetFeed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFeedCompleted(object state) {
            if ((this.GetFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFeedCompleted(this, new GetFeedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFeedAsync(string format) {
            this.GetFeedAsync(format, null);
        }
        
        public void GetFeedAsync(string format, object userState) {
            if ((this.onBeginGetFeedDelegate == null)) {
                this.onBeginGetFeedDelegate = new BeginOperationDelegate(this.OnBeginGetFeed);
            }
            if ((this.onEndGetFeedDelegate == null)) {
                this.onEndGetFeedDelegate = new EndOperationDelegate(this.OnEndGetFeed);
            }
            if ((this.onGetFeedCompletedDelegate == null)) {
                this.onGetFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFeedCompleted);
            }
            base.InvokeAsync(this.onBeginGetFeedDelegate, new object[] {
                        format}, this.onEndGetFeedDelegate, this.onGetFeedCompletedDelegate, userState);
        }
    }
}
